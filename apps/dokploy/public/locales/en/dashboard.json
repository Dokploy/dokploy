{
  "dashboard.search.placeholder": "Search projects or settings",
  "dashboard.search.empty": "No projects added yet. Click on Create project.",
  "dashboard.search.projects": "Projects",
  "dashboard.search.services": "Services",
  "dashboard.search.application": "Application",
  "dashboard.search.projectsItem": "Projects",
  "dashboard.search.monitoring": "Monitoring",
  "dashboard.search.traefik": "Traefik",
  "dashboard.search.docker": "Docker",
  "dashboard.search.requests": "Requests",
  "dashboard.search.settings": "Settings",
  "dashboard.project.application": "Application",
  "dashboard.project.create": "Create",
  "dashboard.project.createDescription": "Assign a name and description to your application",
  "dashboard.project.name": "Name",
  "dashboard.project.namePlaceholder": "Frontend",
  "dashboard.project.nameRequired": "Name is required",
  "dashboard.project.appName": "App Name",
  "dashboard.project.appNamePlaceholder": "my-app",
  "dashboard.project.appNameRequired": "App name is required",
  "dashboard.project.appNameRegex": "App name supports lowercase letters, numbers, '-' and can only start and end letters, and does not support continuous '-'",
  "dashboard.project.description": "Description",
  "dashboard.project.descriptionPlaceholder": "Description of your service...",
  "dashboard.project.selectServer": "Select a Server",
  "dashboard.project.selectServerOptional": "Select a Server (Optional)",
  "dashboard.project.selectServerPlaceholder": "Select a Server",
  "dashboard.project.serverTooltip": "If no server is selected, the application will be deployed on the server where the user is logged in.",
  "dashboard.project.servers": "Servers",
  "dashboard.project.serviceCreated": "Service Created",
  "dashboard.project.errorCreatingService": "Error creating the service",
  "dashboard.project.addDatabase.menuLabel": "Database",
  "dashboard.project.addDatabase.dialogTitle": "Add Database",
  "dashboard.project.addDatabase.selectDatabase": "Select a database",
  "dashboard.project.addDatabase.fillFields": "Fill the next fields.",
  "dashboard.project.addDatabase.name": "Name",
  "dashboard.project.addDatabase.namePlaceholder": "Name",
  "dashboard.project.addDatabase.nameRequired": "Name required",
  "dashboard.project.addDatabase.appName": "App Name",
  "dashboard.project.addDatabase.appNamePlaceholder": "my-app",
  "dashboard.project.addDatabase.appNameRequired": "App name is required",
  "dashboard.project.addDatabase.appNameRegex": "App name supports lowercase letters, numbers, '-' and can only start and end letters, and does not support continuous '-'",
  "dashboard.project.addDatabase.description": "Description",
  "dashboard.project.addDatabase.descriptionPlaceholder": "Description",
  "dashboard.project.addDatabase.selectServer": "Select a Server",
  "dashboard.project.addDatabase.selectServerPlaceholder": "Select a Server",
  "dashboard.project.addDatabase.serversLabel": "Servers ({{count}})",
  "dashboard.project.addDatabase.databaseName": "Database Name",
  "dashboard.project.addDatabase.databaseNamePlaceholder": "Database Name",
  "dashboard.project.addDatabase.databaseUser": "Database User",
  "dashboard.project.addDatabase.databaseUserPlaceholder": "Default {{defaultUser}}",
  "dashboard.project.addDatabase.databasePassword": "Database Password",
  "dashboard.project.addDatabase.databasePasswordPlaceholder": "******************",
  "dashboard.project.addDatabase.databaseRootPassword": "Database Root password",
  "dashboard.project.addDatabase.dockerImage": "Docker image",
  "dashboard.project.addDatabase.dockerImagePlaceholder": "Default {{defaultImage}}",
  "dashboard.project.addDatabase.useReplicaSets": "Use Replica Sets",
  "dashboard.project.addDatabase.create": "Create",
  "dashboard.project.addDatabase.databaseCreated": "Database Created",
  "dashboard.project.addDatabase.errorCreatingDatabase": "Error creating a database",
  "dashboard.project.addDatabase.databasesMap.postgres": "PostgreSQL",
  "dashboard.project.addDatabase.databasesMap.mongo": "MongoDB",
  "dashboard.project.addDatabase.databasesMap.mariadb": "MariaDB",
  "dashboard.project.addDatabase.databasesMap.mysql": "MySQL",
  "dashboard.project.addDatabase.databasesMap.redis": "Redis",
  "dashboard.template.template": "Template",
  "dashboard.template.createFromTemplate": "Create from Template",
  "dashboard.template.createFromTemplateDescription": "Create an open source application from a template",
  "dashboard.template.searchTemplate": "Search Template",
  "dashboard.template.baseUrlOptional": "Base URL (optional)",
  "dashboard.template.loadingTags": "Loading....",
  "dashboard.template.selectedTags": "Selected {{count}} tags",
  "dashboard.template.selectTag": "Select tag",
  "dashboard.template.searchTag": "Search tag...",
  "dashboard.template.loadingTagsMessage": "Loading Tags....",
  "dashboard.template.noTagsFound": "No tags found.",
  "dashboard.template.loadingTemplates": "Loading templates...",
  "dashboard.template.noTemplatesFound": "No templates found",
  "dashboard.template.create": "Create",
  "dashboard.template.areYouSure": "Are you absolutely sure?",
  "dashboard.template.confirmDescription": "This will create an application from the {{name}} template and add it to your project.",
  "dashboard.template.selectServer": "Select a Server",
  "dashboard.template.selectServerOptional": "Select a Server (Optional)",
  "dashboard.template.selectServerPlaceholder": "Select a Server",
  "dashboard.template.serverTooltip": "If no server is selected, the application will be deployed on the server where the user is logged in.",
  "dashboard.template.servers": "Servers",
  "dashboard.template.cancel": "Cancel",
  "dashboard.template.confirm": "Confirm",
  "dashboard.template.settingUp": "Setting up...",
  "dashboard.template.createdSuccessfully": "{{name}} template created successfully",
  "dashboard.template.errorDeploying": "An error occurred deploying {{name}} template",
  "dashboard.duplicate.duplicate": "Duplicate",
  "dashboard.duplicate.chooseWhereToDuplicate": "Choose where to duplicate the selected services",
  "dashboard.duplicate.duplicateTo": "Duplicate to",
  "dashboard.duplicate.newProject": "New project",
  "dashboard.duplicate.sameProject": "Same project",
  "dashboard.duplicate.name": "Name",
  "dashboard.duplicate.namePlaceholder": "New project name",
  "dashboard.duplicate.description": "Description",
  "dashboard.duplicate.descriptionPlaceholder": "Project description (optional)",
  "dashboard.duplicate.selectedServicesToDuplicate": "Selected services to duplicate",
  "dashboard.duplicate.cancel": "Cancel",
  "dashboard.duplicate.duplicatingProject": "Duplicating project...",
  "dashboard.duplicate.duplicatingServices": "Duplicating services...",
  "dashboard.duplicate.duplicateProject": "Duplicate project",
  "dashboard.duplicate.duplicateServices": "Duplicate services",
  "dashboard.duplicate.projectDuplicatedSuccessfully": "Project duplicated successfully",
  "dashboard.duplicate.servicesDuplicatedSuccessfully": "Services duplicated successfully",
  "dashboard.duplicate.projectNameRequired": "Project name is required",
  "dashboard.ai.aiAssistant": "AI Assistant",
  "dashboard.ai.createCustomTemplate": "Create a custom template based on your needs",
  "dashboard.ai.steps": "Steps",
  "dashboard.ai.stepOf": "Step {{current}} of {{total}}",
  "dashboard.ai.checkoutSteps": "Checkout Steps",
  "dashboard.ai.aiFeaturesNotEnabled": "AI features are not enabled",
  "dashboard.ai.enableAiInSettings": "To use AI-powered template generation, please enable AI in your settings.",
  "dashboard.ai.selectAiProvider": "Select AI Provider",
  "dashboard.ai.selectAiProviderPlaceholder": "Select an AI provider",
  "dashboard.ai.back": "Back",
  "dashboard.ai.next": "Next",
  "dashboard.ai.create": "Create",
  "dashboard.ai.composeCreated": "Compose Created",
  "dashboard.ai.errorCreatingCompose": "Error creating the compose",
  "dashboard.compose.compose": "Compose",
  "dashboard.compose.createCompose": "Create Compose",
  "dashboard.compose.assignNameAndDescription": "Assign a name and description to your compose",
  "dashboard.compose.name": "Name",
  "dashboard.compose.namePlaceholder": "Frontend",
  "dashboard.compose.nameRequired": "Name is required",
  "dashboard.compose.appName": "App Name",
  "dashboard.compose.appNamePlaceholder": "my-app",
  "dashboard.compose.appNameRequired": "App name is required",
  "dashboard.compose.appNameRegex": "App name supports lowercase letters, numbers, '-' and can only start and end letters, and does not support continuous '-'",
  "dashboard.compose.description": "Description",
  "dashboard.compose.descriptionPlaceholder": "Description of your service...",
  "dashboard.compose.selectServer": "Select a Server",
  "dashboard.compose.selectServerOptional": "Select a Server (Optional)",
  "dashboard.compose.selectServerPlaceholder": "Select a Server",
  "dashboard.compose.serverTooltip": "If no server is selected, the application will be deployed on the server where the user is logged in.",
  "dashboard.compose.servers": "Servers",
  "dashboard.compose.composeType": "Compose Type",
  "dashboard.compose.selectComposeType": "Select a compose type",
  "dashboard.compose.dockerCompose": "Docker Compose",
  "dashboard.compose.stack": "Stack",
  "dashboard.compose.create": "Create",
  "dashboard.compose.composeCreated": "Compose Created",
  "dashboard.compose.errorCreatingCompose": "Error creating the compose",
  "dashboard.database.database": "Database",
  "dashboard.database.databases": "Databases",
  "dashboard.database.selectDatabase": "Select a database",
  "dashboard.database.fillNextFields": "Fill the next fields.",
  "dashboard.database.name": "Name",
  "dashboard.database.namePlaceholder": "Name",
  "dashboard.database.nameRequired": "Name required",
  "dashboard.database.appName": "App Name",
  "dashboard.database.appNamePlaceholder": "my-app",
  "dashboard.database.appNameRequired": "App name is required",
  "dashboard.database.appNameRegex": "App name supports lowercase letters, numbers, '-' and can only start and end letters, and does not support continuous '-'",
  "dashboard.database.description": "Description",
  "dashboard.database.descriptionPlaceholder": "Description",
  "dashboard.database.selectServer": "Select a Server",
  "dashboard.database.selectServerPlaceholder": "Select a Server",
  "dashboard.database.servers": "Servers",
  "dashboard.database.databaseName": "Database Name",
  "dashboard.database.databaseNamePlaceholder": "Database Name",
  "dashboard.database.databaseUser": "Database User",
  "dashboard.database.defaultUser": "Default {{user}}",
  "dashboard.database.databasePassword": "Database Password",
  "dashboard.database.databasePasswordPlaceholder": "******************",
  "dashboard.database.databaseRootPassword": "Database Root password",
  "dashboard.database.dockerImage": "Docker image",
  "dashboard.database.defaultImage": "Default {{image}}",
  "dashboard.database.useReplicaSets": "Use Replica Sets",
  "dashboard.database.create": "Create",
  "dashboard.database.databaseCreated": "Database Created",
  "dashboard.database.errorCreatingDatabase": "Error creating a database",
  "dashboard.monitoring.title": "Monitoring",
  "dashboard.monitoring.description": "Watch the usage of your server in the current app",
  "dashboard.monitoring.cpuUsage": "CPU Usage",
  "dashboard.monitoring.memoryUsage": "Memory Usage",
  "dashboard.monitoring.diskSpace": "Disk Space",
  "dashboard.monitoring.blockIO": "Block I/O",
  "dashboard.monitoring.networkIO": "Network I/O",
  "dashboard.monitoring.used": "Used",
  "dashboard.monitoring.limit": "Limit",
  "dashboard.monitoring.read": "Read",
  "dashboard.monitoring.write": "Write",
  "dashboard.monitoring.inMB": "In MB",
  "dashboard.monitoring.outMB": "Out MB",
  "dashboard.traefik.fileSystem": "Traefik File System",
  "dashboard.traefik.fileSystemDescription": "Manage all the files and directories in '/etc/dokploy/traefik'.",
  "dashboard.traefik.warningMessage": "Adding invalid configuration to existing files, can break your Traefik instance, preventing access to your applications.",
  "dashboard.traefik.noDirectoriesFound": "No directories or files detected in '/etc/dokploy/traefik'",
  "dashboard.traefik.noFileSelected": "No file selected",
  "dashboard.traefik.config": "Traefik config",
  "dashboard.traefik.invalidYAML": "Invalid YAML",
  "dashboard.traefik.configUpdated": "Traefik config Updated",
  "dashboard.traefik.errorUpdatingConfig": "Error updating the Traefik config",
  "dashboard.traefik.unlock": "Unlock",
  "dashboard.traefik.lock": "Lock",
  "dashboard.swarm.loading": "Loading...",
  "dashboard.swarm.failedToLoad": "Failed to load data",
  "dashboard.swarm.overview": "Docker Swarm Overview",
  "dashboard.swarm.manageCluster": "Manage Cluster",
  "dashboard.swarm.totalNodes": "Total Nodes",
  "dashboard.swarm.activeNodes": "Active Nodes",
  "dashboard.swarm.managerNodes": "Manager Nodes",
  "dashboard.swarm.online": "Online",
  "dashboard.swarm.worker": "Worker",
  "dashboard.swarm.nodeStatus": "Node Status",
  "dashboard.swarm.tlsStatus": "TLS Status",
  "dashboard.swarm.availability": "Availability",
  "dashboard.swarm.engineVersion": "Engine Version",
  "dashboard.swarm.cpu": "CPU",
  "dashboard.swarm.cores": "Core(s)",
  "dashboard.swarm.memory": "Memory",
  "dashboard.swarm.gb": "GB",
  "dashboard.swarm.ipAddress": "IP Address",
  "dashboard.swarm.config": "Config",
  "dashboard.swarm.nodeConfig": "Node Config",
  "dashboard.swarm.nodeConfigDescription": "See in detail the metadata of this node",
  "dashboard.swarm.noDataFound": "No data found",
  "dashboard.swarm.services": "Services",
  "dashboard.swarm.nodeApplications": "Node Applications",
  "dashboard.swarm.nodeApplicationsDescription": "See in detail the applications running on this node",
  "dashboard.swarm.columns.id": "ID",
  "dashboard.swarm.columns.name": "Name",
  "dashboard.swarm.columns.image": "Image",
  "dashboard.swarm.columns.mode": "Mode",
  "dashboard.swarm.columns.currentState": "Current State",
  "dashboard.swarm.columns.desiredState": "Desired State",
  "dashboard.swarm.columns.replicas": "Replicas",
  "dashboard.swarm.columns.ports": "Ports",
  "dashboard.swarm.columns.errors": "Errors",
  "dashboard.swarm.columns.logs": "Logs",
  "dashboard.swarm.columns.openMenu": "Open menu",
  "dashboard.swarm.columns.actions": "Actions",
  "dashboard.swarm.columns.viewLogs": "View Logs",
  "dashboard.traefik.update": "Update",
  "dashboard.requests.title": "Requests",
  "dashboard.requests.description": "See all the incoming requests that pass trough Traefik",
  "dashboard.requests.warningMessage": "When you activate, you need to reload traefik to apply the changes, you can reload traefik in",
  "dashboard.requests.settings": "Settings",
  "dashboard.requests.logCleanupSchedule": "Log Cleanup Schedule",
  "dashboard.requests.logCleanupTooltip": "At the scheduled time, the cleanup job will keep only the last 1000 entries in the access log file and signal Traefik to reopen its log files. The default schedule is daily at midnight (0 0 * * *).",
  "dashboard.requests.invalidCronExpression": "Please enter a valid cron expression",
  "dashboard.requests.logCleanupUpdated": "Log cleanup schedule updated",
  "dashboard.requests.logCleanupUpdateError": "Failed to update log cleanup schedule",
  "dashboard.requests.updateSchedule": "Update Schedule",
  "dashboard.requests.deactivateRequests": "Deactivate Requests",
  "dashboard.requests.activateRequests": "Activate Requests",
  "dashboard.requests.activateDescription": "You will also need to restart Traefik to apply the changes",
  "dashboard.requests.deactivated": "Requests deactivated",
  "dashboard.requests.activated": "Requests activated",
  "dashboard.requests.deactivate": "Deactivate",
  "dashboard.requests.activate": "Activate",
  "dashboard.requests.clearDates": "Clear dates",
  "dashboard.requests.pickDateRange": "Pick a date range",
  "dashboard.requests.overview": "Overview",
  "dashboard.requests.recentRequests": "Recent Requests",
  "dashboard.requests.notActive": "Requests are not activated",
  "dashboard.requests.status": "Status",
  "dashboard.requests.columns": "Columns",
  "dashboard.requests.level": "Level",
  "dashboard.requests.message": "Message",
  "dashboard.requests.time": "Timestamp",
  "dashboard.requests.noResults": "No results.",
  "dashboard.requests.filterByName": "Filter by name...",
  "dashboard.requests.previous": "Previous",
  "dashboard.requests.next": "Next",
  "dashboard.requests.showing": "Showing",
  "dashboard.requests.to": "to",
  "dashboard.requests.of": "of",
  "dashboard.requests.entries": "entries",
  "dashboard.requests.downloadAsJson": "Download as JSON",
  "dashboard.docker.logs.viewLogs": "View Logs",
  "dashboard.docker.logs.viewLogsDescription": "View the logs for {{containerId}}",
  "dashboard.docker.logs.timeRange": "Time range",
  "dashboard.docker.logs.selectTimeRange": "Select time range",
  "dashboard.docker.logs.showTimestamps": "Show timestamps",
  "dashboard.docker.logs.timeRanges.allTime": "All time",
  "dashboard.docker.logs.timeRanges.lastHour": "Last hour",
  "dashboard.docker.logs.timeRanges.last6Hours": "Last 6 hours",
  "dashboard.docker.logs.timeRanges.last24Hours": "Last 24 hours",
  "dashboard.docker.logs.timeRanges.last7Days": "Last 7 days",
  "dashboard.docker.logs.timeRanges.last30Days": "Last 30 days",
  "dashboard.docker.logs.all": "All",
  "dashboard.docker.logs.limitTo": "Limit to",
  "dashboard.docker.logs.numberOfLines": "Number of lines",
  "dashboard.docker.logs.nbLines": "{{count}} lines",
  "dashboard.docker.terminal.title": "Docker Terminal",
  "dashboard.docker.terminal.description": "Easy way to access to docker container",
  "dashboard.docker.terminal.confirmCloseTitle": "Are you sure you want to close the terminal?",
  "dashboard.docker.terminal.confirmCloseDescription": "By clicking the confirm button, the terminal will be closed.",
  "dashboard.docker.terminal.cancel": "Cancel",
  "dashboard.docker.terminal.confirm": "Confirm",
  "dashboard.docker.terminal.selectWayToConnect": "Select way to connect to <b>{{containerId}}</b>",
  "dashboard.docker.terminal.bash": "Bash",
  "dashboard.docker.terminal.sh": "/bin/sh",
  "dashboard.docker.config.viewConfig": "View Config",
  "dashboard.docker.config.containerConfig": "Container Config",
  "dashboard.docker.config.description": "See in detail the config of this container",
  "dashboard.docker.columns.name": "Name",
  "dashboard.docker.columns.state": "State",
  "dashboard.docker.columns.status": "Status",
  "dashboard.docker.columns.image": "Image",
  "dashboard.docker.columns.openMenu": "Open menu",
  "dashboard.docker.columns.actions": "Actions",
  "dashboard.docker.columns.viewLogs": "View Logs",
  "dashboard.docker.columns.terminal": "Terminal",
  "dashboard.docker.containers.title": "Docker Containers",
  "dashboard.docker.containers.description": "See all the containers of your dokploy server",
  "dashboard.docker.containers.filterByName": "Filter by name...",
  "dashboard.docker.containers.columns": "Columns",
  "dashboard.docker.containers.loading": "Loading...",
  "dashboard.docker.containers.noResults": "No results.",
  "dashboard.domain.domains": "Domains",
  "dashboard.domain.domainsDescription": "Manage domains for your application",
  "dashboard.domain.addDomain": "Add Domain",
  "dashboard.domain.loadingDomains": "Loading domains...",
  "dashboard.domain.requireAtLeastOneDomain": "You need at least one domain to access your application",
  "dashboard.domain.deleteDomainTitle": "Delete Domain",
  "dashboard.domain.deleteDomainDescription": "Are you sure you want to delete this domain? This action cannot be undone.",
  "dashboard.domain.domainDeletedSuccessfully": "Domain deleted successfully",
  "dashboard.domain.errorDeletingDomain": "Error deleting domain",
  "dashboard.domain.path": "Path",
  "dashboard.domain.urlPathDescription": "The URL path where your application will be accessible",
  "dashboard.domain.port": "Port",
  "dashboard.domain.containerPortDescription": "The container port your application is running on",
  "dashboard.domain.https": "HTTPS",
  "dashboard.domain.http": "HTTP",
  "dashboard.domain.secureHttpsConnection": "Secure HTTPS connection with SSL certificate",
  "dashboard.domain.standardHttpConnection": "Standard HTTP connection",
  "dashboard.domain.cert": "Certificate",
  "dashboard.domain.sslCertificateProvider": "SSL certificate provider for this domain",
  "dashboard.domain.checkingDns": "Checking DNS...",
  "dashboard.domain.dnsValid": "DNS Valid",
  "dashboard.domain.validateDns": "Validate DNS",
  "dashboard.domain.behind": "Behind",
  "dashboard.domain.error": "Error",
  "dashboard.domain.clickToValidateDnsConfiguration": "Click to validate DNS configuration",
  "dashboard.domain.failedToValidate": "Failed to validate domain",
  "dashboard.domain.fetchDescription": "Fetch services from server",
  "dashboard.domain.cacheDescription": "Use cached services",
  "dashboard.domain.traefikMeWarning": "You need to configure your server to generate traefik.me domains. ",
  "dashboard.domain.traefikMeWarningLink1": "Configure your server",
  "dashboard.domain.traefikMeWarningLink2": "Add a server",
  "dashboard.domain.traefikMeWarningLink3": "to enable this feature.",
  "dashboard.domain.generateTraefikMe": "Generate traefik.me domain",
  "dashboard.domain.internalPathDescription": "The internal path where your application will be accessible inside the container",
  "dashboard.domain.stripPathDescription": "Remove the path from the URL before forwarding to the container",
  "dashboard.domain.portDescription": "The port your application is running on inside the container",
  "dashboard.domain.httpsDescription": "Enable HTTPS with SSL certificate",
  "dashboard.domain.none": "None",
  "dashboard.domain.letsEncrypt": "Let's Encrypt",
  "dashboard.domain.custom": "Custom",
  "dashboard.domain.domainUpdated": "Domain Updated",
  "dashboard.domain.domainCreated": "Domain Created",
  "dashboard.domain.errorUpdatingDomain": "Error updating the domain",
  "dashboard.domain.errorCreatingDomain": "Error creating the domain",
  "dashboard.domain.update": "Update",
  "dashboard.domain.create": "Create",
  "dashboard.domain.editDomainDescription": "In this section you can edit a domain",
  "dashboard.domain.addDomainDescription": "In this section you can add domains",
  "dashboard.domain.host": "Host",
  "dashboard.domain.hostPlaceholder": "example.com",
  "dashboard.domain.hostRequired": "Add a hostname",
  "dashboard.domain.pathPlaceholder": "/api",
  "dashboard.domain.internalPath": "Internal Path",
  "dashboard.domain.internalPathPlaceholder": "/",
  "dashboard.domain.internalPathRequired": "Internal path must start with '/'",
  "dashboard.domain.stripPath": "Strip Path",
  "dashboard.domain.stripPathRequired": "Strip path can only be enabled when a path other than '/' is specified",
  "dashboard.domain.containerPort": "Container Port",
  "dashboard.domain.containerPortPlaceholder": "3000",
  "dashboard.domain.portMinError": "Port must be at least 1",
  "dashboard.domain.portMaxError": "Port must be 65535 or below",
  "dashboard.domain.certificateProvider": "Certificate Provider",
  "dashboard.domain.certificateProviderPlaceholder": "Select a certificate provider",
  "dashboard.domain.certificateProviderRequired": "Required",
  "dashboard.domain.customCertificateResolver": "Custom Certificate Resolver",
  "dashboard.domain.customCertificateResolverPlaceholder": "Enter your custom certificate resolver",
  "dashboard.domain.customCertificateResolverRequired": "Required",
  "dashboard.domain.serviceName": "Service Name",
  "dashboard.domain.serviceNamePlaceholder": "Select a service name",
  "dashboard.domain.serviceNameRequired": "Required",
  "dashboard.domain.empty": "Empty",
  "dashboard.volumeBackups.restoreVolumeBackup": "Restore Volume Backup",
  "dashboard.volumeBackups.restoreVolumeBackupDescription": "Select a destination and search for volume backup files",
  "dashboard.volumeBackups.volumeNameWarning": "Make sure the volume name is not being used by another container.",
  "dashboard.volumeBackups.destination": "Destination",
  "dashboard.volumeBackups.selectDestination": "Select Destination",
  "dashboard.volumeBackups.searchDestinations": "Search destinations...",
  "dashboard.volumeBackups.noDestinationsFound": "No destinations found.",
  "dashboard.volumeBackups.searchBackupFiles": "Search Backup Files",
  "dashboard.volumeBackups.searchAndSelectBackupFile": "Search and select a backup file",
  "dashboard.volumeBackups.searchBackupFilesPlaceholder": "Search backup files...",
  "dashboard.volumeBackups.loadingBackupFiles": "Loading backup files...",
  "dashboard.volumeBackups.noBackupFilesFound": "No backup files found for \"{{search}}\"",
  "dashboard.volumeBackups.noBackupFilesAvailable": "No backup files available",
  "dashboard.volumeBackups.backupFileCopied": "Backup file copied to clipboard",
  "dashboard.volumeBackups.volumeName": "Volume Name",
  "dashboard.volumeBackups.volumeNamePlaceholder": "Enter volume name",
  "dashboard.volumeBackups.restore": "Restore",
  "dashboard.volumeBackups.destinationRequired": "Please select a destination",
  "dashboard.volumeBackups.destinationRequiredMessage": "Destination is required",
  "dashboard.volumeBackups.backupFileRequired": "Please select a backup file",
  "dashboard.volumeBackups.backupFileRequiredMessage": "Backup file is required",
  "dashboard.volumeBackups.volumeNameRequired": "Please enter a volume name",
  "dashboard.volumeBackups.volumeNameRequiredMessage": "Volume name is required",
  "dashboard.volumeBackups.size": "Size",
  "dashboard.volumeBackups.directory": "Directory",
  "dashboard.volumeBackups.restoreCompleted": "Restore completed successfully!",
  "dashboard.compose.updateCompose": "Update Compose",
  "dashboard.compose.updateComposeDescription": "Update your compose configuration",
  "dashboard.compose.update": "Update",
  "dashboard.compose.composeUpdated": "Compose Updated",
  "dashboard.compose.errorUpdatingCompose": "Error updating the compose",
  "dashboard.compose.deleteService": "Delete Service",
  "dashboard.compose.deleteServiceDescription": "Are you sure you want to delete this service? This action cannot be undone.",
  "dashboard.compose.delete": "Delete",
  "dashboard.compose.serviceDeleted": "Service deleted successfully",
  "dashboard.compose.errorDeletingService": "Error deleting service",
  "dashboard.compose.composeFileEditor": "Compose File Editor",
  "dashboard.compose.composeFileEditorDescription": "Edit your compose file configuration",
  "dashboard.compose.save": "Save",
  "dashboard.compose.composeFileSaved": "Compose file saved successfully",
  "dashboard.compose.errorSavingComposeFile": "Error saving compose file",
  "dashboard.compose.showConvertedCompose": "Show Converted Compose",
  "dashboard.compose.showConvertedComposeDescription": "View the converted compose configuration",
  "dashboard.compose.isolatedDeployment": "Isolated Deployment",
  "dashboard.compose.isolatedDeploymentDescription": "Deploy this service in isolation",
  "dashboard.compose.deploy": "Deploy",
  "dashboard.compose.serviceDeployed": "Service deployed successfully",
  "dashboard.compose.errorDeployingService": "Error deploying service",
  "dashboard.compose.randomizeCompose": "Randomize Compose",
  "dashboard.compose.randomizeComposeDescription": "Randomize your compose configuration",
  "dashboard.compose.randomize": "Randomize",
  "dashboard.compose.composeRandomized": "Compose randomized successfully",
  "dashboard.compose.errorRandomizingCompose": "Error randomizing compose",
  "dashboard.compose.showUtilities": "Show Utilities",
  "dashboard.compose.showUtilitiesDescription": "View compose utilities",
  "dashboard.compose.show": "Show",
  "dashboard.compose.actions": "Actions",
  "dashboard.compose.actionsDescription": "Available compose actions",
  "dashboard.compose.addCommand": "Add Command",
  "dashboard.compose.addCommandDescription": "Add a custom command to your compose",
  "dashboard.compose.add": "Add",
  "dashboard.compose.commandAdded": "Command added successfully",
  "dashboard.compose.errorAddingCommand": "Error adding command",
  "dashboard.compose.showStack": "Show Stack",
  "dashboard.compose.showStackDescription": "View stack information",
  "dashboard.compose.showLogs": "Show Logs",
  "dashboard.compose.showLogsDescription": "View compose logs",
  "dashboard.compose.saveGiteaProviderCompose": "Save Gitea Provider Compose",
  "dashboard.compose.saveGiteaProviderComposeDescription": "Save compose with Gitea provider",
  "dashboard.compose.saveGithubProviderCompose": "Save GitHub Provider Compose",
  "dashboard.compose.saveGithubProviderComposeDescription": "Save compose with GitHub provider",
  "dashboard.compose.saveGitlabProviderCompose": "Save GitLab Provider Compose",
  "dashboard.compose.saveGitlabProviderComposeDescription": "Save compose with GitLab provider",
  "dashboard.compose.saveBitbucketProviderCompose": "Save Bitbucket Provider Compose",
  "dashboard.compose.saveBitbucketProviderComposeDescription": "Save compose with Bitbucket provider",
  "dashboard.compose.saveGitProviderCompose": "Save Git Provider Compose",
  "dashboard.compose.saveGitProviderComposeDescription": "Save compose with Git provider",
  "dashboard.compose.saveCompose": "Save Compose",
  "dashboard.compose.composeSaved": "Compose saved successfully",
  "dashboard.compose.errorSavingCompose": "Error saving compose",
  "dashboard.compose.command": "Command",
  "dashboard.compose.commandPlaceholder": "Enter command",
  "dashboard.compose.commandRequired": "Command is required",
  "dashboard.compose.serviceName": "Service Name",
  "dashboard.compose.serviceNamePlaceholder": "Enter service name",
  "dashboard.compose.serviceNameRequired": "Service name is required",
  "dashboard.compose.provider": "Provider",
  "dashboard.compose.providerPlaceholder": "Select provider",
  "dashboard.compose.providerRequired": "Provider is required",
  "dashboard.compose.repository": "Repository",
  "dashboard.compose.repositoryPlaceholder": "Enter repository URL",
  "dashboard.compose.repositoryRequired": "Repository is required",
  "dashboard.compose.branch": "Branch",
  "dashboard.compose.branchPlaceholder": "Enter branch name",
  "dashboard.compose.branchRequired": "Branch is required",
  "dashboard.compose.token": "Token",
  "dashboard.compose.tokenPlaceholder": "Enter access token",
  "dashboard.compose.tokenRequired": "Token is required",
  "dashboard.compose.username": "Username",
  "dashboard.compose.usernamePlaceholder": "Enter username",
  "dashboard.compose.usernameRequired": "Username is required",
  "dashboard.compose.password": "Password",
  "dashboard.compose.passwordPlaceholder": "Enter password",
  "dashboard.compose.passwordRequired": "Password is required",
  "dashboard.compose.composeNameRequired": "Compose name is required",
  "dashboard.compose.projectNameMustMatch": "Project name must match \"{{expectedName}}\"",
  "dashboard.compose.toConfirmType": "To confirm, type",
  "dashboard.compose.inTheBoxBelow": "in the box below:",
  "dashboard.compose.enterComposeNameToConfirm": "Enter compose name to confirm",
  "dashboard.compose.deleteVolumesAssociated": "Delete volumes associated with this compose",
  "dashboard.compose.cancel": "Cancel",
  "dashboard.compose.confirm": "Confirm",
  "dashboard.compose.copiedToClipboard": "Copied to clipboard. Be careful!",
  "dashboard.compose.invalidYAML": "Invalid YAML",
  "dashboard.compose.composeFilePlaceholder": "version: '3'\nservices:\n    web:\n    image: nginx\n    ports:\n        - \"80:80\"\n    ",
  "dashboard.compose.utilities": "Utilities",
  "dashboard.compose.isolatedDeploymentExplanation": "This feature creates an isolated environment for your deployment by adding unique prefixes to all resources. It establishes a dedicated network based on your compose file's name, ensuring your services run in isolation. This prevents conflicts when running multiple instances of the same template or services with identical names.",
  "dashboard.compose.resourcesThatWillBeIsolated": "Resources that will be isolated:",
  "dashboard.compose.dockerVolumes": "Docker volumes",
  "dashboard.compose.dockerNetworks": "Docker networks",
  "dashboard.compose.enableIsolatedDeployment": "Enable Isolated Deployment ({{appName}})",
  "dashboard.compose.enableIsolatedDeploymentDescription": "Enable isolated deployment to the compose file.",
  "dashboard.compose.preview": "Preview",
  "dashboard.compose.randomizeComposeExperimental": "Randomize Compose (Experimental)",
  "dashboard.compose.randomizeComposeExplanation": "This will randomize the compose file and will add a suffix to the property to avoid conflicts",
  "dashboard.compose.volumes": "volumes",
  "dashboard.compose.networks": "networks",
  "dashboard.compose.services": "services",
  "dashboard.compose.configs": "configs",
  "dashboard.compose.secrets": "secrets",
  "dashboard.compose.randomizeComposeInfo": "When you activate this option, we will include a env `COMPOSE_PREFIX` variable to the compose file so you can use it in your compose file.",
  "dashboard.compose.suffix": "Suffix",
  "dashboard.compose.suffixPlaceholder": "Enter a suffix (Optional, example: prod)",
  "dashboard.compose.applyRandomize": "Apply Randomize",
  "dashboard.compose.applyRandomizeDescription": "Apply randomize to the compose file.",
  "dashboard.compose.random": "Random",
  "dashboard.compose.commandUpdated": "Command Updated",
  "dashboard.compose.errorUpdatingCommand": "Error updating the command",
  "dashboard.compose.runCommand": "Run Command",
  "dashboard.compose.runCommandDescription": "Override a custom command to the compose file",
  "dashboard.compose.modifyingDefaultCommandWarning": "Modifying the default command may affect deployment stability, impacting logs and monitoring. Proceed carefully and test thoroughly. By default, the command starts with docker.",
  "dashboard.compose.customCommand": "Custom command",
  "dashboard.compose.defaultCommand": "Default Command ({{defaultCommand}})",
  "dashboard.compose.logs": "Logs",
  "dashboard.compose.logsDescription": "Watch the logs of the application in real time",
  "dashboard.compose.selectContainerToViewLogs": "Select a container to view logs",
  "dashboard.compose.native": "Native",
  "dashboard.compose.swarm": "Swarm",
  "dashboard.compose.loading": "Loading...",
  "dashboard.compose.selectAContainer": "Select a container",
  "dashboard.compose.containers": "Containers ({{count}})",
  "dashboard.compose.deploySettings": "Deploy Settings",
  "dashboard.compose.deploySettingsDescription": "Create a compose file to deploy your compose",
  "dashboard.compose.previewCompose": "Preview Compose",
  "dashboard.compose.convertedCompose": "Converted Compose",
  "dashboard.compose.convertedComposeDescription": "Preview your docker-compose file with added domains. Note: At least one domain must be specified for this conversion to take effect.",
  "dashboard.compose.convertedComposeInfo": "Preview your docker-compose file with added domains. Note: At least one domain must be specified for this conversion to take effect.",
  "dashboard.compose.noConvertedComposeDataAvailable": "No converted compose data available.",
  "dashboard.compose.fetchedSourceType": "Fetched source type",
  "dashboard.compose.errorFetchingSourceType": "Error fetching source type",
  "dashboard.compose.refresh": "Refresh",
  "dashboard.compose.deployCompose": "Deploy Compose",
  "dashboard.compose.deployComposeDescription": "Are you sure you want to deploy this compose?",
  "dashboard.compose.composeDeployedSuccessfully": "Compose deployed successfully",
  "dashboard.compose.errorDeployingCompose": "Error deploying compose",
  "dashboard.compose.deployTooltip": "Downloads the source code and performs a complete build",
  "dashboard.compose.reloadCompose": "Reload Compose",
  "dashboard.compose.reloadComposeDescription": "Are you sure you want to reload this compose?",
  "dashboard.compose.composeReloadedSuccessfully": "Compose reloaded successfully",
  "dashboard.compose.errorReloadingCompose": "Error reloading compose",
  "dashboard.compose.reload": "Reload",
  "dashboard.compose.reloadTooltip": "Reload the compose without rebuilding it",
  "dashboard.compose.startCompose": "Start Compose",
  "dashboard.compose.startComposeDescription": "Are you sure you want to start this compose?",
  "dashboard.compose.composeStartedSuccessfully": "Compose started successfully",
  "dashboard.compose.errorStartingCompose": "Error starting compose",
  "dashboard.compose.start": "Start",
  "dashboard.compose.startTooltip": "Start the compose (requires a previous successful build)",
  "dashboard.compose.stopCompose": "Stop Compose",
  "dashboard.compose.stopComposeDescription": "Are you sure you want to stop this compose?",
  "dashboard.compose.composeStoppedSuccessfully": "Compose stopped successfully",
  "dashboard.compose.errorStoppingCompose": "Error stopping compose",
  "dashboard.compose.stop": "Stop",
  "dashboard.compose.stopTooltip": "Stop the currently running compose",
  "dashboard.compose.openTerminal": "Open Terminal",
  "dashboard.compose.autodeploy": "Autodeploy",
  "dashboard.compose.toggleAutodeploy": "Toggle autodeploy",
  "dashboard.compose.autoDeployUpdated": "Auto Deploy Updated",
  "dashboard.compose.errorUpdatingAutoDeploy": "Error updating Auto Deploy",
  "dashboard.compose.selectSourceOfCode": "Select the source of your code",
  "dashboard.compose.loadingProviders": "Loading providers...",
  "dashboard.compose.repositoryDisconnectedSuccessfully": "Repository disconnected successfully",
  "dashboard.compose.failedToDisconnectRepository": "Failed to disconnect repository: {{error}}",
  "dashboard.compose.repositoryConnectionUnauthorizedProvider": "Repository connection through unauthorized provider",
  "dashboard.compose.githubConfigurationMessage": "To deploy using GitHub, you need to configure your account first. Please, go to",
  "dashboard.compose.gitlabConfigurationMessage": "To deploy using GitLab, you need to configure your account first. Please, go to",
  "dashboard.compose.bitbucketConfigurationMessage": "To deploy using Bitbucket, you need to configure your account first. Please, go to",
  "dashboard.compose.giteaConfigurationMessage": "To deploy using Gitea, you need to configure your account first. Please, go to",
  "dashboard.compose.settings": "Settings",
  "dashboard.compose.toDoSo": "to do so.",
  "dashboard.compose.repositoryURLRequired": "Repository URL is required",
  "dashboard.compose.gitProviderSaved": "Git Provider Saved",
  "dashboard.compose.errorSavingGitProvider": "Error saving the Git provider",
  "dashboard.compose.repositoryURL": "Repository URL",
  "dashboard.compose.viewRepository": "View Repository",
  "dashboard.compose.repositoryURLPlaceholder": "Repository URL",
  "dashboard.compose.sshKey": "SSH Key",
  "dashboard.compose.selectAKey": "Select a key",
  "dashboard.compose.none": "None",
  "dashboard.compose.keys": "Keys ({{count}})",
  "dashboard.compose.addSSHKey": "Add SSH Key",
  "dashboard.compose.composePath": "Compose Path",
  "dashboard.compose.watchPaths": "Watch Paths",
  "dashboard.compose.watchPathsTooltip": "Add paths to watch for changes. When files in these paths change, a new deployment will be triggered. This will work only when manual webhook is setup.",
  "dashboard.compose.watchPathsInputPlaceholder": "Enter a path to watch (e.g., src/**, dist/*.js)",
  "dashboard.compose.enableSubmodules": "Enable Submodules",
  "dashboard.compose.repoRequired": "Repo is required",
  "dashboard.compose.ownerRequired": "Owner is required",
  "dashboard.compose.githubProviderRequired": "Github Provider is required",
  "dashboard.compose.githubProviderSaved": "Service Provided Saved",
  "dashboard.compose.errorSavingGithubProvider": "Error saving the Github provider",
  "dashboard.compose.githubAccount": "Github Account",
  "dashboard.compose.selectGithubAccount": "Select a Github Account",
  "dashboard.compose.selectRepository": "Select repository",
  "dashboard.compose.searchRepository": "Search repository...",
  "dashboard.compose.loadingRepositories": "Loading Repositories....",
  "dashboard.compose.noRepositoriesFound": "No repositories found.",
  "dashboard.compose.selectBranch": "Select branch",
  "dashboard.compose.searchBranch": "Search branch...",
  "dashboard.compose.loadingBranches": "Loading Branches....",
  "dashboard.compose.selectARepository": "Select a repository",
  "dashboard.compose.noBranchFound": "No branch found.",
  "dashboard.compose.triggerType": "Trigger Type",
  "dashboard.compose.triggerTypeTooltip": "Choose when to trigger deployments: on push to the selected branch or when a new tag is created.",
  "dashboard.compose.selectTriggerType": "Select a trigger type",
  "dashboard.compose.onPush": "On Push",
  "dashboard.compose.onTag": "On Tag",
  "dashboard.compose.gitlabProviderRequired": "Gitlab Provider is required",
  "dashboard.compose.gitlabProviderSaved": "Service Provided Saved",
  "dashboard.compose.errorSavingGitlabProvider": "Error saving the Gitlab provider",
  "dashboard.compose.gitlabAccount": "Gitlab Account",
  "dashboard.compose.selectGitlabAccount": "Select a Gitlab Account",
  "dashboard.compose.bitbucketProviderRequired": "Bitbucket Provider is required",
  "dashboard.compose.bitbucketProviderSaved": "Service Provided Saved",
  "dashboard.compose.errorSavingBitbucketProvider": "Error saving the Bitbucket provider",
  "dashboard.compose.bitbucketAccount": "Bitbucket Account",
  "dashboard.compose.selectBitbucketAccount": "Select a Bitbucket Account",
  "dashboard.compose.repositories": "Repositories",
  "dashboard.compose.giteaProviderRequired": "Gitea Provider is required",
  "dashboard.compose.giteaProviderSaved": "Service Provider Saved",
  "dashboard.compose.errorSavingGiteaProvider": "Error saving the Gitea provider",
  "dashboard.compose.giteaAccount": "Gitea Account",
  "dashboard.compose.selectGiteaAccount": "Select a Gitea Account",
  "dashboard.compose.searchBranches": "Search branches...",
  "dashboard.compose.noBranchesFound": "No branches found.",
  "dashboard.dockerLogs.noTimeFound": "--- No time found ---",
  "dashboard.dockerLogs.noTimestamp": "No timestamp",
  "dashboard.dockerLogs.logType": "Log type",
  "dashboard.dockerLogs.searchLogs": "Search logs...",
  "dashboard.dockerLogs.downloadLogs": "Download logs",
  "dashboard.dockerLogs.noLogsFound": "No logs found",
  "dashboard.mariadb.modify": "Modify MariaDB",
  "dashboard.mariadb.updateDescription": "Update the MariaDB data",
  "dashboard.mariadb.name": "Name",
  "dashboard.mariadb.namePlaceholder": "Vandelay Industries",
  "dashboard.mariadb.nameRequired": "Name is required",
  "dashboard.mariadb.description": "Description",
  "dashboard.mariadb.descriptionPlaceholder": "Description about your project...",
  "dashboard.mariadb.update": "Update",
  "dashboard.mariadb.updatedSuccessfully": "MariaDB updated successfully",
  "dashboard.mariadb.errorUpdating": "Error updating the MariaDB",
  "dashboard.mariadb.externalCredentials": "External Credentials",
  "dashboard.mariadb.externalCredentialsDescription": "In order to make the database reachable through internet, you must set a port. Make sure the port is not used by another application or database.",
  "dashboard.mariadb.setIpAddressWarning": "You need to set an IP address in your",
  "dashboard.mariadb.remoteServerUpdateIp": "Remote Servers -> Server -> Edit Server -> Update IP Address",
  "dashboard.mariadb.webServerUpdateIp": "Web Server -> Server -> Update Server IP",
  "dashboard.mariadb.fixDatabaseUrl": "to fix the database url connection.",
  "dashboard.mariadb.externalPort": "External Port (Internet)",
  "dashboard.mariadb.externalPortPlaceholder": "3306",
  "dashboard.mariadb.externalPortRange": "Range must be 0 - 65535",
  "dashboard.mariadb.externalHost": "External Host",
  "dashboard.mariadb.save": "Save",
  "dashboard.mariadb.externalPortUpdated": "External Port updated",
  "dashboard.mariadb.errorSavingExternalPort": "Error saving the external port",
  "dashboard.mariadb.deploymentCompleted": "Deployment completed successfully!",
  "dashboard.mariadb.deploySettings": "Deploy Settings",
  "dashboard.mariadb.deployMariadb": "Deploy Mariadb",
  "dashboard.mariadb.deployMariadbDescription": "Are you sure you want to deploy this mariadb?",
  "dashboard.mariadb.deploy": "Deploy",
  "dashboard.mariadb.deployTooltip": "Downloads and sets up the MariaDB database",
  "dashboard.mariadb.reloadMariadb": "Reload Mariadb",
  "dashboard.mariadb.reloadMariadbDescription": "Are you sure you want to reload this mariadb?",
  "dashboard.mariadb.reloadedSuccessfully": "Mariadb reloaded successfully",
  "dashboard.mariadb.errorReloading": "Error reloading Mariadb",
  "dashboard.mariadb.reload": "Reload",
  "dashboard.mariadb.reloadTooltip": "Restart the MariaDB service without rebuilding",
  "dashboard.mariadb.startMariadb": "Start Mariadb",
  "dashboard.mariadb.startMariadbDescription": "Are you sure you want to start this mariadb?",
  "dashboard.mariadb.startedSuccessfully": "Mariadb started successfully",
  "dashboard.mariadb.errorStarting": "Error starting Mariadb",
  "dashboard.mariadb.start": "Start",
  "dashboard.mariadb.startTooltip": "Start the MariaDB database (requires a previous successful setup)",
  "dashboard.mariadb.stopMariadb": "Stop Mariadb",
  "dashboard.mariadb.stopMariadbDescription": "Are you sure you want to stop this mariadb?",
  "dashboard.mariadb.stoppedSuccessfully": "Mariadb stopped successfully",
  "dashboard.mariadb.errorStopping": "Error stopping Mariadb",
  "dashboard.mariadb.stop": "Stop",
  "dashboard.mariadb.stopTooltip": "Stop the currently running MariaDB database",
  "dashboard.mariadb.openTerminal": "Open Terminal",
  "dashboard.mariadb.openTerminalTooltip": "Open a terminal to the MariaDB container",
  "dashboard.mariadb.internalCredentials": "Internal Credentials",
  "dashboard.mariadb.user": "User",
  "dashboard.mariadb.databaseName": "Database Name",
  "dashboard.mariadb.password": "Password",
  "dashboard.mariadb.rootPassword": "Root Password",
  "dashboard.mariadb.internalPort": "Internal Port (Container)",
  "dashboard.mariadb.internalHost": "Internal Host",
  "dashboard.mariadb.internalConnectionUrl": "Internal Connection URL",
  "dashboard.mongo.deploymentCompleted": "Deployment completed successfully!",
  "dashboard.mongo.deploySettings": "Deploy Settings",
  "dashboard.mongo.deployMongo": "Deploy Mongo",
  "dashboard.mongo.deployMongoDescription": "Are you sure you want to deploy this mongo?",
  "dashboard.mongo.deploy": "Deploy",
  "dashboard.mongo.deployTooltip": "Downloads and sets up the MongoDB database",
  "dashboard.mongo.reloadMongo": "Reload Mongo",
  "dashboard.mongo.reloadMongoDescription": "Are you sure you want to reload this mongo?",
  "dashboard.mongo.reloadedSuccessfully": "Mongo reloaded successfully",
  "dashboard.mongo.errorReloading": "Error reloading Mongo",
  "dashboard.mongo.reload": "Reload",
  "dashboard.mongo.reloadTooltip": "Restart the MongoDB service without rebuilding",
  "dashboard.mongo.startMongo": "Start Mongo",
  "dashboard.mongo.startMongoDescription": "Are you sure you want to start this mongo?",
  "dashboard.mongo.startedSuccessfully": "Mongo started successfully",
  "dashboard.mongo.errorStarting": "Error starting Mongo",
  "dashboard.mongo.start": "Start",
  "dashboard.mongo.startTooltip": "Start the MongoDB database (requires a previous successful setup)",
  "dashboard.mongo.stopMongo": "Stop Mongo",
  "dashboard.mongo.stopMongoDescription": "Are you sure you want to stop this mongo?",
  "dashboard.mongo.stoppedSuccessfully": "Mongo stopped successfully",
  "dashboard.mongo.errorStopping": "Error stopping Mongo",
  "dashboard.mongo.stop": "Stop",
  "dashboard.mongo.stopTooltip": "Stop the currently running MongoDB database",
  "dashboard.mongo.openTerminal": "Open Terminal",
  "dashboard.mongo.openTerminalTooltip": "Open a terminal to the MongoDB container",
  "dashboard.mongo.externalCredentials": "External Credentials",
  "dashboard.mongo.externalCredentialsDescription": "In order to make the database reachable through internet, you must set a port. Make sure the port is not used by another application or database.",
  "dashboard.mongo.setIpAddressWarning": "You need to set an IP address in your",
  "dashboard.mongo.remoteServerUpdateIp": "Remote Servers -> Server -> Edit Server -> Update IP Address",
  "dashboard.mongo.webServerUpdateIp": "Web Server -> Server -> Update Server IP",
  "dashboard.mongo.fixDatabaseUrl": "to fix the database url connection.",
  "dashboard.mongo.externalPort": "External Port (Internet)",
  "dashboard.mongo.externalPortPlaceholder": "27017",
  "dashboard.mongo.externalPortRange": "Range must be 0 - 65535",
  "dashboard.mongo.externalHost": "External Host",
  "dashboard.mongo.save": "Save",
  "dashboard.mongo.externalPortUpdated": "External Port updated",
  "dashboard.mongo.errorSavingExternalPort": "Error saving the external port",
  "dashboard.mongo.internalCredentials": "Internal Credentials",
  "dashboard.mongo.user": "User",
  "dashboard.mongo.password": "Password",
  "dashboard.mongo.internalPort": "Internal Port (Container)",
  "dashboard.mongo.internalHost": "Internal Host",
  "dashboard.mongo.internalConnectionUrl": "Internal Connection URL",
  "dashboard.mongo.modify": "Modify MongoDB",
  "dashboard.mongo.updateDescription": "Update the MongoDB data",
  "dashboard.mongo.name": "Name",
  "dashboard.mongo.namePlaceholder": "Vandelay Industries",
  "dashboard.mongo.nameRequired": "Name is required",
  "dashboard.mongo.description": "Description",
  "dashboard.mongo.descriptionPlaceholder": "Description about your project...",
  "dashboard.mongo.update": "Update",
  "dashboard.mongo.updatedSuccessfully": "Mongo updated successfully",
  "dashboard.mongo.errorUpdating": "Error updating mongo database",
  "dashboard.mysql.deploymentCompleted": "Deployment completed successfully!",
  "dashboard.mysql.deploySettings": "Deploy Settings",
  "dashboard.mysql.deployMysql": "Deploy MySQL",
  "dashboard.mysql.deployMysqlDescription": "Are you sure you want to deploy this mysql?",
  "dashboard.mysql.deploy": "Deploy",
  "dashboard.mysql.deployTooltip": "Downloads and sets up the MySQL database",
  "dashboard.mysql.reloadMysql": "Reload MySQL",
  "dashboard.mysql.reloadMysqlDescription": "Are you sure you want to reload this mysql?",
  "dashboard.mysql.reloadedSuccessfully": "MySQL reloaded successfully",
  "dashboard.mysql.errorReloading": "Error reloading MySQL",
  "dashboard.mysql.reload": "Reload",
  "dashboard.mysql.reloadTooltip": "Restart the MySQL service without rebuilding",
  "dashboard.mysql.startMysql": "Start MySQL",
  "dashboard.mysql.startMysqlDescription": "Are you sure you want to start this mysql?",
  "dashboard.mysql.startedSuccessfully": "MySQL started successfully",
  "dashboard.mysql.errorStarting": "Error starting MySQL",
  "dashboard.mysql.start": "Start",
  "dashboard.mysql.startTooltip": "Start the MySQL database (requires a previous successful setup)",
  "dashboard.mysql.stopMysql": "Stop MySQL",
  "dashboard.mysql.stopMysqlDescription": "Are you sure you want to stop this mysql?",
  "dashboard.mysql.stoppedSuccessfully": "MySQL stopped successfully",
  "dashboard.mysql.errorStopping": "Error stopping MySQL",
  "dashboard.mysql.stop": "Stop",
  "dashboard.mysql.stopTooltip": "Stop the currently running MySQL database",
  "dashboard.mysql.openTerminal": "Open Terminal",
  "dashboard.mysql.openTerminalTooltip": "Open a terminal to the MySQL container",
  "dashboard.mysql.externalCredentials": "External Credentials",
  "dashboard.mysql.externalCredentialsDescription": "In order to make the database reachable through internet, you must set a port. Make sure the port is not used by another application or database.",
  "dashboard.mysql.setIpAddressWarning": "You need to set an IP address in your",
  "dashboard.mysql.remoteServerUpdateIp": "Remote Servers -> Server -> Edit Server -> Update IP Address",
  "dashboard.mysql.webServerUpdateIp": "Web Server -> Server -> Update Server IP",
  "dashboard.mysql.fixDatabaseUrl": "to fix the database url connection.",
  "dashboard.mysql.externalPort": "External Port (Internet)",
  "dashboard.mysql.externalPortPlaceholder": "3306",
  "dashboard.mysql.externalPortRange": "Range must be 0 - 65535",
  "dashboard.mysql.externalHost": "External Host",
  "dashboard.mysql.save": "Save",
  "dashboard.mysql.externalPortUpdated": "External Port updated",
  "dashboard.mysql.errorSavingExternalPort": "Error saving the external port",
  "dashboard.mysql.internalCredentials": "Internal Credentials",
  "dashboard.mysql.user": "User",
  "dashboard.mysql.databaseName": "Database Name",
  "dashboard.mysql.password": "Password",
  "dashboard.mysql.rootPassword": "Root Password",
  "dashboard.mysql.internalPort": "Internal Port (Container)",
  "dashboard.mysql.internalHost": "Internal Host",
  "dashboard.mysql.internalConnectionUrl": "Internal Connection URL",
  "dashboard.mysql.modify": "Modify MySQL",
  "dashboard.mysql.updateDescription": "Update the MySQL data",
  "dashboard.mysql.name": "Name",
  "dashboard.mysql.namePlaceholder": "Vandelay Industries",
  "dashboard.mysql.nameRequired": "Name is required",
  "dashboard.mysql.description": "Description",
  "dashboard.mysql.descriptionPlaceholder": "Description about your project...",
  "dashboard.mysql.update": "Update",
  "dashboard.mysql.updatedSuccessfully": "MySQL updated successfully",
  "dashboard.mysql.errorUpdating": "Error updating MySQL",
  "dashboard.postgres.deploymentCompleted": "Deployment completed successfully!",
  "dashboard.postgres.deploySettings": "Deploy Settings",
  "dashboard.postgres.deployPostgres": "Deploy PostgreSQL",
  "dashboard.postgres.deployPostgresDescription": "Are you sure you want to deploy this postgres?",
  "dashboard.postgres.deploy": "Deploy",
  "dashboard.postgres.deployTooltip": "Downloads and sets up the PostgreSQL database",
  "dashboard.postgres.reloadPostgres": "Reload PostgreSQL",
  "dashboard.postgres.reloadPostgresDescription": "Are you sure you want to reload this postgres?",
  "dashboard.postgres.reloadedSuccessfully": "PostgreSQL reloaded successfully",
  "dashboard.postgres.errorReloading": "Error reloading PostgreSQL",
  "dashboard.postgres.reload": "Reload",
  "dashboard.postgres.reloadTooltip": "Restart the PostgreSQL service without rebuilding",
  "dashboard.postgres.startPostgres": "Start PostgreSQL",
  "dashboard.postgres.startPostgresDescription": "Are you sure you want to start this postgres?",
  "dashboard.postgres.startedSuccessfully": "PostgreSQL started successfully",
  "dashboard.postgres.errorStarting": "Error starting PostgreSQL",
  "dashboard.postgres.start": "Start",
  "dashboard.postgres.startTooltip": "Start the PostgreSQL database (requires a previous successful setup)",
  "dashboard.postgres.stopPostgres": "Stop PostgreSQL",
  "dashboard.postgres.stopPostgresDescription": "Are you sure you want to stop this postgres?",
  "dashboard.postgres.stoppedSuccessfully": "PostgreSQL stopped successfully",
  "dashboard.postgres.errorStopping": "Error stopping PostgreSQL",
  "dashboard.postgres.stop": "Stop",
  "dashboard.postgres.stopTooltip": "Stop the currently running PostgreSQL database",
  "dashboard.postgres.openTerminal": "Open Terminal",
  "dashboard.postgres.openTerminalTooltip": "Open a terminal to the PostgreSQL container",
  "dashboard.postgres.portRangeError": "Range must be 0 - 65535",
  "dashboard.postgres.externalCredentials": "External Credentials",
  "dashboard.postgres.externalCredentialsDescription": "In order to make the database reachable trought internet is required to set a port, make sure the port is not used by another application or database",
  "dashboard.postgres.externalPortUpdated": "External Port updated",
  "dashboard.postgres.errorSavingExternalPort": "Error saving the external port",
  "dashboard.postgres.ipAddressWarning": "You need to set an IP address in your",
  "dashboard.postgres.remoteServersPath": "Remote Servers -> Server -> Edit Server -> Update IP Address",
  "dashboard.postgres.webServerPath": "Web Server -> Server -> Update Server IP",
  "dashboard.postgres.ipAddressWarningEnd": "to fix the database url connection.",
  "dashboard.postgres.externalPort": "External Port (Internet)",
  "dashboard.postgres.externalHost": "External Host",
  "dashboard.postgres.save": "Save",
  "dashboard.postgres.internalCredentials": "Internal Credentials",
  "dashboard.postgres.user": "User",
  "dashboard.postgres.databaseName": "Database Name",
  "dashboard.postgres.password": "Password",
  "dashboard.postgres.internalPort": "Internal Port (Container)",
  "dashboard.postgres.internalHost": "Internal Host",
  "dashboard.postgres.internalConnectionUrl": "Internal Connection URL",
  "dashboard.postgres.modify": "Modify Postgres",
  "dashboard.postgres.updateDescription": "Update the Postgres data",
  "dashboard.postgres.name": "Name",
  "dashboard.postgres.namePlaceholder": "Vandelay Industries",
  "dashboard.postgres.nameRequired": "Name is required",
  "dashboard.postgres.description": "Description",
  "dashboard.postgres.descriptionPlaceholder": "Description about your project...",
  "dashboard.postgres.update": "Update",
  "dashboard.postgres.updatedSuccessfully": "Postgres updated successfully",
  "dashboard.postgres.errorUpdating": "Error updating Postgres",
  "dashboard.postgres.dockerImageRequired": "Docker image is required",
  "dashboard.postgres.advancedSettings": "Advanced Settings",
  "dashboard.postgres.dockerImage": "Docker Image",
  "dashboard.postgres.dockerImagePlaceholder": "postgres:15",
  "dashboard.postgres.command": "Command",
  "dashboard.postgres.commandPlaceholder": "Custom command",
  "dashboard.postgres.customCommandUpdated": "Custom Command Updated",
  "dashboard.postgres.errorUpdatingCustomCommand": "Error updating the custom command",
  "dashboard.redis.deploymentCompleted": "Deployment completed successfully!",
  "dashboard.redis.deploySettings": "Deploy Settings",
  "dashboard.redis.deployRedis": "Deploy Redis",
  "dashboard.redis.deployRedisDescription": "Are you sure you want to deploy this redis?",
  "dashboard.redis.deploy": "Deploy",
  "dashboard.redis.deployTooltip": "Downloads and sets up the Redis database",
  "dashboard.redis.reloadRedis": "Reload Redis",
  "dashboard.redis.reloadRedisDescription": "Are you sure you want to reload this redis?",
  "dashboard.redis.reloadedSuccessfully": "Redis reloaded successfully",
  "dashboard.redis.errorReloading": "Error reloading Redis",
  "dashboard.redis.reload": "Reload",
  "dashboard.redis.reloadTooltip": "Restart the Redis service without rebuilding",
  "dashboard.redis.startRedis": "Start Redis",
  "dashboard.redis.startRedisDescription": "Are you sure you want to start this redis?",
  "dashboard.redis.startedSuccessfully": "Redis started successfully",
  "dashboard.redis.errorStarting": "Error starting Redis",
  "dashboard.redis.start": "Start",
  "dashboard.redis.startTooltip": "Start the Redis database (requires a previous successful setup)",
  "dashboard.redis.stopRedis": "Stop Redis",
  "dashboard.redis.stopRedisDescription": "Are you sure you want to stop this redis?",
  "dashboard.redis.stoppedSuccessfully": "Redis stopped successfully",
  "dashboard.redis.errorStopping": "Error stopping Redis",
  "dashboard.redis.stop": "Stop",
  "dashboard.redis.stopTooltip": "Stop the currently running Redis database",
  "dashboard.redis.openTerminal": "Open Terminal",
  "dashboard.redis.openTerminalTooltip": "Open a terminal to the Redis container",
  "dashboard.redis.portRangeError": "Range must be 0 - 65535",
  "dashboard.redis.externalCredentials": "External Credentials",
  "dashboard.redis.externalCredentialsDescription": "In order to make the database reachable trought internet is required to set a port, make sure the port is not used by another application or database",
  "dashboard.redis.externalPortUpdated": "External Port updated",
  "dashboard.redis.errorSavingExternalPort": "Error saving the external port",
  "dashboard.redis.ipAddressWarning": "You need to set an IP address in your",
  "dashboard.redis.remoteServersPath": "Remote Servers -> Server -> Edit Server -> Update IP Address",
  "dashboard.redis.webServerPath": "Web Server -> Server -> Update Server IP",
  "dashboard.redis.ipAddressWarningEnd": "to fix the database url connection.",
  "dashboard.redis.externalPort": "External Port (Internet)",
  "dashboard.redis.externalHost": "External Host",
  "dashboard.redis.save": "Save",
  "dashboard.redis.internalCredentials": "Internal Credentials",
  "dashboard.redis.user": "User",
  "dashboard.redis.password": "Password",
  "dashboard.redis.internalPort": "Internal Port (Container)",
  "dashboard.redis.internalHost": "Internal Host",
  "dashboard.redis.internalConnectionUrl": "Internal Connection URL",
  "dashboard.redis.modify": "Modify Redis",
  "dashboard.redis.updateDescription": "Update the redis data",
  "dashboard.redis.name": "Name",
  "dashboard.redis.namePlaceholder": "Vandelay Industries",
  "dashboard.redis.nameRequired": "Name is required",
  "dashboard.redis.description": "Description",
  "dashboard.redis.descriptionPlaceholder": "Description about your project...",
  "dashboard.redis.update": "Update",
  "dashboard.redis.updatedSuccessfully": "Redis updated successfully",
  "dashboard.redis.errorUpdating": "Error updating Redis",
  "dashboard.projects.projectEnvironment": "Project Environment",
  "dashboard.projects.projectEnvironmentDescription": "Update the env Environment variables that are accessible to all services of this project.",
  "dashboard.projects.envSyntaxInfo": "Use this syntax to reference project-level variables in your service environments:",
  "dashboard.projects.environmentVariables": "Environment variables",
  "dashboard.projects.envPlaceholder": "NODE_ENV=production\nPORT=3000\n",
  "dashboard.projects.update": "Update",
  "dashboard.projects.envUpdatedSuccessfully": "Project env updated successfully",
  "dashboard.projects.errorUpdatingEnv": "Error updating the env",
  "dashboard.shared.rebuildDatabase": "Rebuild Database",
  "dashboard.shared.rebuildDatabaseSuccess": "Database rebuilt successfully",
  "dashboard.shared.rebuildDatabaseError": "Error rebuilding database",
  "dashboard.shared.rebuildDatabaseTooltip": "Rebuild the database. This will delete all data and create a new database.",
  "dashboard.shared.rebuildDatabaseButton": "Rebuild Database",
  "dashboard.shared.rebuildDatabaseButtonTooltip": "Rebuild the database. This will delete all data and create a new database.",
  "dashboard.shared.rebuildDatabaseErrorUnknown": "Unknown error",
  "dashboard.shared.dangerZone": "Danger Zone",
  "dashboard.shared.areYouSure": "Are you absolutely sure?",
  "dashboard.shared.rebuildDatabaseDescription": "This action will completely reset your database to its initial state. All data, tables, and configurations will be removed.",
  "dashboard.shared.rebuildDatabaseCannotBeUndone": "This action cannot be undone.",
  "dashboard.shared.rebuildDatabaseYes": "Yes, rebuild database",
  "dashboard.shared.rebuildDatabaseCancel": "Cancel",
  "dashboard.shared.rebuildDatabaseActions": "This action will:",
  "dashboard.shared.rebuildDatabaseAction1": "Stop the current database service",
  "dashboard.shared.rebuildDatabaseAction2": "Delete all existing data and volumes",
  "dashboard.shared.rebuildDatabaseAction3": "Reset to the default configuration",
  "dashboard.shared.rebuildDatabaseAction4": "Restart the service with a clean state",
  "dashboard.schedule.scheduledTasks": "Scheduled Tasks",
  "dashboard.schedule.scheduleTasksDescription": "Schedule tasks to run automatically at specified intervals.",
  "dashboard.schedule.loadingScheduledTasks": "Loading scheduled tasks...",
  "dashboard.schedule.disabled": "Disabled",
  "dashboard.schedule.cron": "Cron",
  "dashboard.schedule.scheduleRunSuccessfully": "Schedule run successfully",
  "dashboard.schedule.errorRunningSchedule": "Error running schedule",
  "dashboard.schedule.runManualSchedule": "Run manual schedule",
  "dashboard.schedule.deleteSchedule": "Delete Schedule",
  "dashboard.schedule.deleteScheduleDescription": "Are you sure you want to delete this schedule? This action cannot be undone.",
  "dashboard.schedule.scheduleDeletedSuccessfully": "Schedule deleted successfully",
  "dashboard.schedule.errorDeletingSchedule": "Error deleting schedule",
  "dashboard.schedule.noScheduledTasks": "Create your first scheduled task to automate your workflows",
  "dashboard.schedule.createSchedule": "Create Schedule",
  "dashboard.schedule.editSchedule": "Edit Schedule",
  "dashboard.schedule.addSchedule": "Add Schedule",
  "dashboard.schedule.nameRequired": "Name is required",
  "dashboard.schedule.cronExpressionRequired": "Cron expression is required",
  "dashboard.schedule.serviceNameRequired": "Service name is required",
  "dashboard.schedule.scriptRequired": "Script is required",
  "dashboard.schedule.commandRequired": "Command is required",
  "dashboard.schedule.taskName": "Task Name",
  "dashboard.schedule.taskNamePlaceholder": "Daily Database Backup",
  "dashboard.schedule.taskNameDescription": "A descriptive name for your scheduled task",
  "dashboard.schedule.schedule": "Schedule",
  "dashboard.schedule.scheduleTooltip": "Cron expression format: minute hour day month weekday",
  "dashboard.schedule.scheduleTooltipExample": "Example: 0 0 * * * (daily at midnight)",
  "dashboard.schedule.selectPredefinedSchedule": "Select a predefined schedule",
  "dashboard.schedule.customCronExpression": "Custom cron expression (e.g., 0 0 * * *)",
  "dashboard.schedule.customCronExpressionDescription": "Choose a predefined schedule or enter a custom cron expression",
  "dashboard.schedule.everyMinute": "Every minute",
  "dashboard.schedule.everyHour": "Every hour",
  "dashboard.schedule.everyDayAtMidnight": "Every day at midnight",
  "dashboard.schedule.everySundayAtMidnight": "Every Sunday at midnight",
  "dashboard.schedule.everyMonthOnFirst": "Every month on the 1st at midnight",
  "dashboard.schedule.every15Minutes": "Every 15 minutes",
  "dashboard.schedule.everyWeekdayAtMidnight": "Every weekday at midnight",
  "dashboard.schedule.serviceName": "Service Name",
  "dashboard.schedule.selectServiceName": "Select a service name",
  "dashboard.schedule.empty": "Empty",
  "dashboard.schedule.fetchTooltip": "Fetch: Will clone the repository and load the services",
  "dashboard.schedule.cacheTooltip": "Cache: If you previously deployed this compose, it will read the services from the last deployment/fetch from the repository",
  "dashboard.schedule.shellType": "Shell Type",
  "dashboard.schedule.selectShellType": "Select shell type",
  "dashboard.schedule.bash": "Bash",
  "dashboard.schedule.sh": "Sh",
  "dashboard.schedule.shellTypeDescription": "Choose the shell to execute your command",
  "dashboard.schedule.command": "Command",
  "dashboard.schedule.commandPlaceholder": "npm run backup",
  "dashboard.schedule.commandDescription": "The command to execute in your container",
  "dashboard.schedule.script": "Script",
  "dashboard.schedule.scriptPlaceholder": "# This is a comment\necho \"Hello, world!\"\n",
  "dashboard.schedule.enabled": "Enabled",
  "dashboard.schedule.create": "Create",
  "dashboard.schedule.update": "Update",
  "dashboard.schedule.scheduleCreatedSuccessfully": "Schedule created successfully",
  "dashboard.schedule.scheduleUpdatedSuccessfully": "Schedule updated successfully",
  "dashboard.schedule.errorCreatingSchedule": "Error creating schedule",
  "dashboard.schedule.errorUpdatingSchedule": "Error updating schedule",
  "dashboard.schedule.cronExpressionFormat": "Cron expression format: minute hour day month weekday",
  "dashboard.schedule.cronExpressionExample": "Example: 0 0 * * * (daily at midnight)",
  "dashboard.updateServer.updateAvailable": "Update Available",
  "dashboard.updateServer.checkForUpdates": "Check for updates",
  "dashboard.status.idle": "Idle",
  "dashboard.status.error": "Error",
  "dashboard.status.done": "Done",
  "dashboard.status.running": "Running",
  "dashboard.shared.valueCopiedToClipboard": "Value is copied to clipboard",
  "dashboard.organization.name": "Name",
  "dashboard.organization.namePlaceholder": "Enter organization name",
  "dashboard.organization.nameRequired": "Organization name is required",
  "dashboard.organization.logoUrl": "Logo URL",
  "dashboard.organization.createOrganization": "Create Organization",
  "dashboard.organization.updateOrganization": "Update Organization",
  "dashboard.organization.addDescription": "Add a new organization",
  "dashboard.organization.updateDescription": "Update organization details",
  "dashboard.organization.createdSuccessfully": "Organization created successfully",
  "dashboard.organization.updatedSuccessfully": "Organization updated successfully",
  "dashboard.organization.errorCreating": "Error creating organization",
  "dashboard.organization.errorUpdating": "Error updating organization",
  "dashboard.ai.stepOneTitle": "Step 1: Describe Your Needs",
  "dashboard.ai.describeNeeds": "Describe your needs",
  "dashboard.ai.describeNeedsPlaceholder": "Describe what you want to build...",
  "dashboard.ai.examples": "Examples",
  "dashboard.ai.selectServer": "Select Server",
  "dashboard.ai.selectServerOptional": "Select Server (Optional)",
  "dashboard.ai.servers": "Servers",
  "dashboard.ai.stepTwoChooseVariant": "Step 2: Choose a Variant",
  "dashboard.ai.aiProcessingRequest": "AI is processing your request...",
  "dashboard.ai.basedOnInputWeSuggest": "Based on your input, we suggest the following variants:",
  "dashboard.ai.changeVariant": "Change Variant",
  "dashboard.ai.configurationFiles": "Configuration Files",
  "dashboard.ai.description": "Description",
  "dashboard.ai.dockerCompose": "Docker Compose",
  "dashboard.ai.domainHost": "Domain Host",
  "dashboard.ai.domains": "Domains",
  "dashboard.ai.environmentVariables": "Environment Variables",
  "dashboard.ai.error": "Error",
  "dashboard.ai.errorGeneratingSuggestions": "Error generating suggestions",
  "dashboard.ai.generatingTemplateSuggestions": "Generating template suggestions...",
  "dashboard.ai.port": "Port",
  "dashboard.ai.serviceName": "Service Name",
  "dashboard.ai.templateDoesNotRequireFiles": "This template does not require additional files",
  "dashboard.ai.templateRequiresMounting": "This template requires mounting the following files:",
  "dashboard.ai.variableName": "Variable Name",
  "dashboard.ai.variableValue": "Variable Value",
  "dashboard.ai.willBeMountedAs": "Will be mounted as",
  "dashboard.ai.addDomain": "Add Domain",
  "dashboard.ai.addVariable": "Add Variable",
  "dashboard.ai.stepThreeReviewAndFinalize": "Step 3: Review and Finalize",
  "dashboard.ai.name": "Name",
  "dashboard.ai.server": "Server",
  "dashboard.ai.dokployServer": "Dokploy Server",
  "dashboard.projects": "Projects",
  "dashboard.requests.execTime": "Execution Time",
  "dashboard.requests.ip": "IP Address",
  "dashboard.requests.count": "Count",
  "dashboard.requests.pageViews": "Page Views",
  "dashboard.requests.copiedToClipboard": "Request log copied to clipboard",
  "dashboard.requests.requestLog": "Request Log",
  "dashboard.requests.requestLogDescription": "View the detailed request log",
  "dashboard.requests.clearFilters": "Clear Filters",
  "dashboard.requests.noResultsFound": "No results found",
  "dashboard.requests.selected": "Selected",
  "dashboard.swarm.dataTable.columns": "Columns",
  "dashboard.swarm.dataTable.filterByName": "Filter by name...",
  "dashboard.swarm.dataTable.next": "Next",
  "dashboard.swarm.dataTable.noResults": "No results found",
  "dashboard.swarm.dataTable.previous": "Previous",
  "dashboard.project.projectEnvironment": "Project Environment",
  "dashboard.project.createService": "Create Service",
  "dashboard.project.actions": "Actions",
  "dashboard.project.loading": "Loading...",
  "dashboard.project.selectAll": "Select All",
  "dashboard.project.bulkActions": "Bulk Actions",
  "dashboard.project.startServices": "Start Services",
  "dashboard.project.startServicesDescription": "Are you sure you want to start {{count}} services?",
  "dashboard.project.start": "Start",
  "dashboard.project.stopServices": "Stop Services",
  "dashboard.project.stopServicesDescription": "Are you sure you want to stop {{count}} services?",
  "dashboard.project.stop": "Stop",
  "dashboard.project.deleteServices": "Delete Services",
  "dashboard.project.deleteServicesDescription": "Are you sure you want to delete {{count}} services? This action cannot be undone.",
  "dashboard.project.delete": "Delete",
  "dashboard.project.move": "Move",
  "dashboard.project.moveServices": "Move Services",
  "dashboard.project.moveServicesDescription": "Select the target project to move {{count}} services",
  "dashboard.project.noOtherProjectsAvailable": "No other projects available. Create a new project first to move services.",
  "dashboard.project.selectTargetProject": "Select target project",
  "dashboard.project.cancel": "Cancel",
  "dashboard.project.moveServicesAction": "Move Services",
  "dashboard.project.filterServices": "Filter services...",
  "dashboard.project.sortBy": "Sort by...",
  "dashboard.project.newestFirst": "Newest first",
  "dashboard.project.oldestFirst": "Oldest first",
  "dashboard.project.nameAZ": "Name (A-Z)",
  "dashboard.project.nameZA": "Name (Z-A)",
  "dashboard.project.typeAZ": "Type (A-Z)",
  "dashboard.project.typeZA": "Type (Z-A)",
  "dashboard.project.selectTypes": "Select types...",
  "dashboard.project.selected": "{{count}} selected",
  "dashboard.project.searchType": "Search type...",
  "dashboard.project.noTypeFound": "No type found.",
  "dashboard.project.clearFilters": "Clear filters",
  "dashboard.project.noServicesAdded": "No services added yet. Click on Create Service.",
  "dashboard.project.noServicesFound": "No services found with the current filters",
  "dashboard.project.adjustFilters": "Try adjusting your search or filters",
  "dashboard.project.created": "Created",
  "dashboard.project.servicesStartedSuccess": "{{count}} services started successfully",
  "dashboard.project.servicesStoppedSuccess": "{{count}} services stopped successfully",
  "dashboard.project.servicesDeletedSuccess": "{{count}} services deleted successfully",
  "dashboard.project.servicesMovedSuccess": "{{count}} services moved successfully",
  "dashboard.project.errorStartingService": "Error starting service {{serviceId}}",
  "dashboard.project.errorStoppingService": "Error stopping service {{serviceId}}",
  "dashboard.project.errorDeletingService": "Error deleting service {{serviceId}}",
  "dashboard.project.errorMovingService": "Error moving service {{serviceId}}",
  "dashboard.project.projects": "Projects",
  "dashboard.services.database": "Database",
  "dashboard.services.general": "General",
  "dashboard.services.environment": "Environment",
  "dashboard.services.logs": "Logs",
  "dashboard.services.monitoring": "Monitoring",
  "dashboard.services.backups": "Backups",
  "dashboard.services.advanced": "Advanced",
  "dashboard.services.dokployServer": "Dokploy Server",
  "dashboard.services.billing": "Billing",
  "dashboard.services.serverInactiveTooltip": "You cannot, deploy this application because the server is inactive, please upgrade your plan to add more servers.",
  "dashboard.services.serverInactiveMessage": "This service is hosted on the server {{serverName}}, but this server has been disabled because your current plan doesn't include enough servers. Please purchase more servers to regain access to this application.",
  "dashboard.services.goToBilling": "Go to",
  "dashboard.services.application": "Application",
  "dashboard.services.ipAddressCopied": "IP Address Copied!",
  "dashboard.services.domains": "Domains",
  "dashboard.services.previewDeployments": "Preview Deployments",
  "dashboard.services.schedules": "Schedules",
  "dashboard.services.volumeBackups": "Volume Backups",
  "dashboard.services.deployments": "Deployments",
  "dashboard.services.compose": "Compose",
  "dashboard.application.name": "Name",
  "dashboard.application.description": "Description",
  "dashboard.application.update": "Update",
  "dashboard.application.build.buildTypes.dockerfile": "Dockerfile",
  "dashboard.application.build.buildTypes.heroku_buildpacks": "Heroku Buildpacks",
  "dashboard.application.build.buildTypes.paketo_buildpacks": "Paketo Buildpacks",
  "dashboard.application.build.buildTypes.nixpacks": "Nixpacks",
  "dashboard.application.build.buildTypes.static": "Static",
  "dashboard.application.build.buildTypes.railpack": "Railpack",
  "dashboard.application.build.errorSavingBuildType": "Error saving build type",
  "dashboard.application.build.buildType": "Build Type",
  "dashboard.application.build.buildTypeDescription": "Choose how to build your application",
  "dashboard.application.build.resourceWarning": "Builders can consume significant memory and CPU resources (recommended: 4+ GB RAM and 2+ CPU cores). For production environments, please review our",
  "dashboard.application.build.productionGuide": "Production guide",
  "dashboard.application.build.resourceWarningEnd": "for best practices and optimization recommendations. Builders are suitable for development and prototyping purposes when you have sufficient resources available.",
  "dashboard.application.build.new": "New",
  "dashboard.application.build.herokuVersion": "Heroku Version (optional)",
  "dashboard.application.build.herokuVersionPlaceholder": "Heroku version (Default: 24)",
  "dashboard.application.build.dockerFile": "Docker File",
  "dashboard.application.build.dockerFilePlaceholder": "Path of your Dockerfile",
  "dashboard.application.build.dockerContextPath": "Docker Context Path",
  "dashboard.application.build.dockerContextPathPlaceholder": "Path of your Docker context (default: .)",
  "dashboard.application.build.dockerBuildStage": "Docker Build Stage",
  "dashboard.application.build.dockerBuildStageDescription": "Allows you to target a specific stage in a Multi-stage Dockerfile. If empty, Docker defaults to build the last defined stage.",
  "dashboard.application.build.dockerBuildStagePlaceholder": "E.g. production",
  "dashboard.application.build.publishDirectory": "Publish Directory",
  "dashboard.application.build.publishDirectoryDescription": "Allows you to serve a single directory via NGINX after the build phase. Useful if the final build assets should be served as a static site.",
  "dashboard.application.build.publishDirectoryPlaceholder": "dist",
  "dashboard.application.build.singlePageApplication": "Single Page Application (SPA)",
  "dashboard.application.build.save": "Save",
  "dashboard.application.general.openTerminal": "Open Terminal",
  "dashboard.application.general.deploySettings": "Deploy Settings",
  "dashboard.application.general.deployApplication": "Deploy Application",
  "dashboard.application.general.deploy": "Deploy",
  "dashboard.application.general.deployTooltip": "Deploy your application with the current configuration",
  "dashboard.application.general.reloadApplication": "Reload Application",
  "dashboard.application.general.reload": "Reload",
  "dashboard.application.general.reloadTooltip": "Reload your application without rebuilding",
  "dashboard.application.general.rebuildApplication": "Rebuild Application",
  "dashboard.application.general.rebuild": "Rebuild",
  "dashboard.application.general.rebuildTooltip": "Rebuild your application from scratch",
  "dashboard.application.general.startApplication": "Start Application",
  "dashboard.application.general.start": "Start",
  "dashboard.application.general.startTooltip": "Start your application if it's currently stopped",
  "dashboard.application.general.stopApplication": "Stop Application",
  "dashboard.application.general.stop": "Stop",
  "dashboard.application.general.stopTooltip": "Stop your running application",
  "dashboard.application.general.autodeploy": "Auto Deploy",
  "dashboard.application.general.autoDeployUpdated": "Auto deploy setting updated successfully",
  "dashboard.application.general.errorUpdatingAutoDeploy": "Error updating auto deploy setting",
  "dashboard.application.general.cleanCache": "Clean Cache",
  "dashboard.application.general.cleanCacheUpdated": "Clean cache setting updated successfully",
  "dashboard.application.general.errorUpdatingCleanCache": "Error updating clean cache setting",
  "dashboard.application.general.deployApplicationDescription": "Are you sure you want to deploy this application?",
  "dashboard.application.general.applicationDeployedSuccessfully": "Application deployed successfully",
  "dashboard.application.general.errorDeployingApplication": "Error deploying application",
  "dashboard.application.general.reloadApplicationDescription": "Are you sure you want to reload this application?",
  "dashboard.application.general.applicationReloadedSuccessfully": "Application reloaded successfully",
  "dashboard.application.general.errorReloadingApplication": "Error reloading application",
  "dashboard.application.general.rebuildApplicationDescription": "Are you sure you want to rebuild this application?",
  "dashboard.application.general.applicationRebuiltSuccessfully": "Application rebuilt successfully",
  "dashboard.application.general.errorRebuildingApplication": "Error rebuilding application",
  "dashboard.application.general.startApplicationDescription": "Are you sure you want to start this application?",
  "dashboard.application.general.applicationStartedSuccessfully": "Application started successfully",
  "dashboard.application.general.errorStartingApplication": "Error starting application",
  "dashboard.application.general.stopApplicationDescription": "Are you sure you want to stop this application?",
  "dashboard.application.general.applicationStoppedSuccessfully": "Application stopped successfully",
  "dashboard.application.general.errorStoppingApplication": "Error stopping application",
  "dashboard.cluster.commandUpdated": "Command Updated",
  "dashboard.cluster.errorUpdatingCommand": "Error updating command",
  "dashboard.cluster.clusterSettings": "Cluster Settings",
  "dashboard.cluster.description": "Add the registry and the replicas of the application",
  "dashboard.cluster.redeployReminder": "Please remember to click Redeploy after modify the cluster settings to apply the changes.",
  "dashboard.cluster.replicas": "Replicas",
  "dashboard.cluster.noRegistriesWarning": "To use a cluster feature, you need to configure at least a registry first. Please, go to",
  "dashboard.cluster.settings": "Settings",
  "dashboard.cluster.toConfigure": "to do so.",
  "dashboard.cluster.selectRegistry": "Select Registry",
  "dashboard.cluster.none": "None",
  "dashboard.cluster.registries": "Registries ({{count}})",
  "dashboard.cluster.save": "Save",
  "dashboard.cluster.replicasPlaceholder": "1",
  "dashboard.swarm.swarmSettingsUpdated": "Swarm settings updated successfully",
  "dashboard.swarm.errorUpdatingSwarmSettings": "Error updating swarm settings",
  "dashboard.swarm.swarmSettings": "Swarm Settings",
  "dashboard.swarm.description": "Monitor and manage your Docker Swarm cluster.",
  "dashboard.swarm.settingsWarning": "Changing settings such as placements may cause the logs/monitoring to be unavailable.",
  "dashboard.swarm.healthCheck": "Health Check",
  "dashboard.swarm.checkInterface": "Check the interface",
  "dashboard.swarm.restartPolicy": "Restart Policy",
  "dashboard.swarm.placement": "Placement",
  "dashboard.swarm.updateConfig": "Update Config",
  "dashboard.swarm.rollbackConfig": "Rollback Config",
  "dashboard.swarm.mode": "Mode",
  "dashboard.swarm.network": "Network",
  "dashboard.swarm.labels": "Labels",
  "dashboard.swarm.update": "Update",
  "dashboard.provider.repositoryDisconnectedSuccessfully": "Repository disconnected successfully",
  "dashboard.provider.failedToDisconnectRepository": "Failed to disconnect repository",
  "dashboard.provider.unknownError": "Unknown error",
  "dashboard.provider.provider": "Provider",
  "dashboard.provider.selectSourceOfCode": "Select the source of your code",
  "dashboard.provider.loadingProviders": "Loading providers...",
  "dashboard.provider.repositoryConnectionUnauthorized": "Repository connection through unauthorized provider",
  "dashboard.provider.github": "GitHub",
  "dashboard.provider.gitlab": "GitLab",
  "dashboard.provider.bitbucket": "Bitbucket",
  "dashboard.provider.gitea": "Gitea",
  "dashboard.provider.docker": "Docker",
  "dashboard.provider.git": "Git",
  "dashboard.provider.drop": "Drop",
  "dashboard.provider.githubConfigurationMessage": "To deploy using GitHub, you need to configure your account first. Please, go to",
  "dashboard.provider.gitlabConfigurationMessage": "To deploy using GitLab, you need to configure your account first. Please, go to",
  "dashboard.provider.bitbucketConfigurationMessage": "To deploy using Bitbucket, you need to configure your account first. Please, go to",
  "dashboard.provider.giteaConfigurationMessage": "To deploy using Gitea, you need to configure your account first. Please, go to",
  "dashboard.provider.settings": "Settings",
  "dashboard.provider.toConfigure": "to configure.",
  "dashboard.gitProvider.branch": "Branch",
  "dashboard.gitProvider.branchPlaceholder": "Enter a branch name (e.g., main)",
  "dashboard.gitProvider.selectKey": "Select a key",
  "dashboard.gitProvider.pathRequired": "Path is required",
  "dashboard.gitProvider.repositoryUrlRequired": "Repository URL is required",
  "dashboard.gitProvider.branchRequired": "Branch is required",
  "dashboard.gitProvider.gitProviderSaved": "Git Provider Saved",
  "dashboard.gitProvider.errorSavingGitProvider": "Error saving the Git provider",
  "dashboard.gitProvider.repositoryUrl": "Repository URL",
  "dashboard.gitProvider.repositoryUrlPlaceholder": "https://github.com/dokploy/dokploy",
  "dashboard.gitProvider.watchPathsPlaceholder": "Enter a path to watch (e.g., src/**, dist/*.js)",
  "dashboard.gitProvider.viewRepository": "View Repository",
  "dashboard.gitProvider.sshKey": "SSH Key",
  "dashboard.environment.environmentsAdded": "Environments added successfully",
  "dashboard.environment.errorAddingEnvironment": "Error adding environment",
  "dashboard.environment.environmentSettings": "Environment Settings",
  "dashboard.environment.environmentDescription": "Manage environment variables for your application",
  "dashboard.environment.unsavedChanges": "You have unsaved changes",
  "dashboard.environment.buildTimeVariables": "Build Time Variables",
  "dashboard.environment.buildTimeDescription": "These variables are available during the build process. Learn more",
  "dashboard.environment.here": "here",
  "dashboard.environment.cancel": "Cancel",
  "dashboard.environment.save": "Save",
  "dashboard.dragNDrop.deploymentSaved": "Deployment saved successfully",
  "dashboard.dragNDrop.buildPathPlaceholder": "./",
  "dashboard.dragNDrop.errorSavingDeployment": "Error saving deployment",
  "dashboard.dragNDrop.buildPath": "Build Path",
  "dashboard.dragNDrop.zipFile": "Zip File",
  "dashboard.dragNDrop.dropFilesOrClick": "Drop files here or click to upload",
  "dashboard.dragNDrop.bytes": "bytes",
  "dashboard.dragNDrop.deploy": "Deploy",
  "dashboard.dockerProvider.dockerImageRequired": "Docker image is required",
  "dashboard.dockerProvider.dockerProviderSaved": "Docker provider saved successfully",
  "dashboard.dockerProvider.errorSavingDockerProvider": "Error saving Docker provider",
  "dashboard.dockerProvider.dockerImage": "Docker Image",
  "dashboard.dockerProvider.registryUrl": "Registry URL",
  "dashboard.dockerProvider.username": "Username",
  "dashboard.dockerProvider.password": "Password",
  "dashboard.dockerProvider.save": "Save",
  "dashboard.dockerProvider.passwordPlaceholder": "******************",
  "dashboard.dockerProvider.dockerImagePlaceholder": "nginx:latest",
  "dashboard.dockerProvider.registryUrlPlaceholder": "https://registry.hub.docker.com",
  "dashboard.dockerProvider.usernamePlaceholder": "username",
  "dashboard.gitlabProvider.pathRequired": "Path is required",
  "dashboard.gitlabProvider.selectGitlabAccount": "Select a GitLab account",
  "dashboard.gitlabProvider.repoRequired": "Repository is required",
  "dashboard.gitlabProvider.ownerRequired": "Owner is required",
  "dashboard.gitlabProvider.branchRequired": "Branch is required",
  "dashboard.gitlabProvider.gitlabProviderRequired": "GitLab provider is required",
  "dashboard.gitlabProvider.serviceProviderSaved": "Service provider saved successfully",
  "dashboard.gitlabProvider.errorSavingGitlabProvider": "Error saving GitLab provider",
  "dashboard.gitlabProvider.gitlabAccount": "GitLab Account",
  "dashboard.gitlabProvider.repository": "Repository",
  "dashboard.gitlabProvider.searchRepository": "Search for a repository",
  "dashboard.gitlabProvider.viewRepository": "View Repository",
  "dashboard.gitlabProvider.searchBranch": "Search for a branch",
  "dashboard.gitlabProvider.loading": "Loading...",
  "dashboard.gitlabProvider.selectRepository": "Select Repository",
  "dashboard.gitlabProvider.loadingRepositories": "Loading repositories...",
  "dashboard.gitlabProvider.noRepositoriesFound": "No repositories found",
  "dashboard.gitlabProvider.repositoryRequired": "Repository is required",
  "dashboard.gitlabProvider.branch": "Branch",
  "dashboard.gitlabProvider.selectBranch": "Select Branch",
  "dashboard.gitlabProvider.loadingBranches": "Loading branches...",
  "dashboard.gitlabProvider.noBranchFound": "No branches found",
  "dashboard.gitlabProvider.buildPath": "Build Path",
  "dashboard.gitlabProvider.watchPaths": "Watch Paths",
  "dashboard.gitlabProvider.watchPathsTooltip": "Add paths to watch for changes. When files in these paths change, a new deployment will be triggered.",
  "dashboard.gitlabProvider.enableSubmodules": "Enable Submodules",
  "dashboard.gitlabProvider.save": "Save",
  "dashboard.giteaProvider.pathRequired": "Path is required",
  "dashboard.giteaProvider.repoRequired": "Repository is required",
  "dashboard.giteaProvider.ownerRequired": "Owner is required",
  "dashboard.giteaProvider.branchRequired": "Branch is required",
  "dashboard.giteaProvider.giteaProviderRequired": "Gitea provider is required",
  "dashboard.giteaProvider.serviceProviderSaved": "Service provider saved successfully",
  "dashboard.giteaProvider.errorSavingGiteaProvider": "Error saving Gitea provider",
  "dashboard.giteaProvider.giteaAccount": "Gitea Account",
  "dashboard.giteaProvider.repository": "Repository",
  "dashboard.giteaProvider.viewRepository": "View Repository",
  "dashboard.giteaProvider.searchBranch": "Search for a branch",
  "dashboard.giteaProvider.loading": "Loading...",
  "dashboard.giteaProvider.selectRepository": "Select Repository",
  "dashboard.giteaProvider.loadingRepositories": "Loading repositories...",
  "dashboard.giteaProvider.noRepositoriesFound": "No repositories found",
  "dashboard.giteaProvider.repositoryRequired": "Repository is required",
  "dashboard.giteaProvider.branch": "Branch",
  "dashboard.giteaProvider.selectBranch": "Select Branch",
  "dashboard.giteaProvider.loadingBranches": "Loading branches...",
  "dashboard.giteaProvider.noBranchFound": "No branches found",
  "dashboard.giteaProvider.buildPath": "Build Path",
  "dashboard.giteaProvider.watchPaths": "Watch Paths",
  "dashboard.giteaProvider.watchPathsTooltip": "Add paths to watch for changes. When files in these paths change, a new deployment will be triggered.",
  "dashboard.giteaProvider.enableSubmodules": "Enable Submodules",
  "dashboard.giteaProvider.save": "Save",
  "dashboard.giteaProvider.selectGiteaAccount": "Select a Gitea account",
  "dashboard.giteaProvider.searchRepository": "Search for a repository",
  "dashboard.giteaProvider.add": "Add",
  "dashboard.githubProvider.pathRequired": "Path is required",
  "dashboard.githubProvider.repoRequired": "Repository is required",
  "dashboard.githubProvider.ownerRequired": "Owner is required",
  "dashboard.githubProvider.branchRequired": "Branch is required",
  "dashboard.githubProvider.githubProviderRequired": "GitHub provider is required",
  "dashboard.githubProvider.serviceProviderSaved": "Service provider saved successfully",
  "dashboard.githubProvider.errorSavingGithubProvider": "Error saving GitHub provider",
  "dashboard.githubProvider.githubAccount": "GitHub Account",
  "dashboard.githubProvider.repository": "Repository",
  "dashboard.githubProvider.viewRepository": "View Repository",
  "dashboard.githubProvider.searchBranch": "Search for a branch",
  "dashboard.githubProvider.loading": "Loading...",
  "dashboard.githubProvider.selectRepository": "Select Repository",
  "dashboard.githubProvider.loadingRepositories": "Loading repositories...",
  "dashboard.githubProvider.noRepositoriesFound": "No repositories found",
  "dashboard.githubProvider.repositoryRequired": "Repository is required",
  "dashboard.githubProvider.branch": "Branch",
  "dashboard.githubProvider.selectBranch": "Select Branch",
  "dashboard.githubProvider.loadingBranches": "Loading branches...",
  "dashboard.githubProvider.noBranchFound": "No branches found",
  "dashboard.githubProvider.buildPath": "Build Path",
  "dashboard.githubProvider.triggerType": "Trigger Type",
  "dashboard.githubProvider.triggerTypeTooltip": "Choose when to trigger deployments: on push to the selected branch or when a new tag is created",
  "dashboard.githubProvider.onPush": "On Push",
  "dashboard.githubProvider.onTag": "On Tag",
  "dashboard.githubProvider.watchPaths": "Watch Paths",
  "dashboard.githubProvider.watchPathsTooltip": "Add paths to watch for changes. When files in these paths change, a new deployment will be triggered.",
  "dashboard.githubProvider.enableSubmodules": "Enable Submodules",
  "dashboard.githubProvider.save": "Save",
  "dashboard.githubProvider.selectGithubAccount": "Select a GitHub account",
  "dashboard.githubProvider.searchRepository": "Search for a repository",
  "dashboard.bitbucketProvider.selectBitbucketAccount": "Select a Bitbucket account",
  "dashboard.bitbucketProvider.searchRepository": "Search for a repository",
  "dashboard.bitbucketProvider.searchBranch": "Search for a branch",
  "dashboard.bitbucketProvider.loadingRepositories": "Loading repositories...",
  "dashboard.bitbucketProvider.repositories": "Repositories",
  "dashboard.bitbucketProvider.repository": "Repository",
  "dashboard.bitbucketProvider.viewRepository": "View Repository",
  "dashboard.bitbucketProvider.selectRepository": "Select Repository",
  "dashboard.bitbucketProvider.noRepositoriesFound": "No repositories found",
  "dashboard.bitbucketProvider.repositoryRequired": "Repository is required",
  "dashboard.bitbucketProvider.branch": "Branch",
  "dashboard.bitbucketProvider.selectBranch": "Select Branch",
  "dashboard.bitbucketProvider.bitbucketAccount": "Bitbucket Account",
  "dashboard.bitbucketProvider.add": "Add",
  "dashboard.bitbucketProvider.watchPaths": "Watch Paths",
  "dashboard.bitbucketProvider.watchPathsTooltip": "Add paths to watch for changes. When files in these paths change, a new deployment will be triggered.",
  "dashboard.bitbucketProvider.enableSubmodules": "Enable Submodules",
  "dashboard.bitbucketProvider.save": "Save",
  "dashboard.bitbucketProvider.pathRequired": "Path is required",
  "dashboard.bitbucketProvider.buildPath": "Build Path",
  "dashboard.bitbucketProvider.ownerRequired": "Owner is required",
  "dashboard.bitbucketProvider.repoRequired": "Repository is required",
  "dashboard.bitbucketProvider.branchRequired": "Branch is required",
  "dashboard.bitbucketProvider.bitbucketProviderRequired": "Bitbucket provider is required",
  "dashboard.bitbucketProvider.serviceProviderSaved": "Service provider saved successfully",
  "dashboard.unauthorizedGitProvider.alertDescription": "The repository connection through {{provider}} is unauthorized. Please configure your {{provider}} account or disconnect this repository.",
  "dashboard.unauthorizedGitProvider.repository": "Repository: {{repository}}",
  "dashboard.unauthorizedGitProvider.owner": "Owner",
  "dashboard.unauthorizedGitProvider.branch": "Branch",
  "dashboard.unauthorizedGitProvider.disconnectRepository": "Disconnect Repository",
  "dashboard.unauthorizedGitProvider.disconnectDescription": "Remove the connection to this repository",
  "dashboard.gitProvider.keys": "Keys ({{count}})",
  "dashboard.gitProvider.addSshKey": "Add SSH Key",
  "dashboard.gitProvider.buildPath": "Build Path",
  "dashboard.gitProvider.watchPaths": "Watch Paths",
  "dashboard.gitProvider.watchPathsTooltip": "Add paths to watch for changes. When files in these paths change, a new deployment will be triggered.",
  "dashboard.gitProvider.add": "Add",
  "dashboard.gitProvider.enableSubmodules": "Enable Submodules",
  "dashboard.gitProvider.save": "Save",
  "dashboard.gitProvider.none": "None",
  "dashboard.rollback.settingsUpdated": "Rollback settings updated successfully",
  "dashboard.rollback.failedToUpdateSettings": "Failed to update rollback settings",
  "dashboard.rollback.rollbackSettings": "Rollback Settings",
  "dashboard.rollback.configureRollbacksDescription": "Configure automatic rollback settings for your application",
  "dashboard.rollback.rollbackWarning": "Rollbacks will automatically revert to the previous stable deployment if the new deployment fails.",
  "dashboard.rollback.enableRollbacks": "Enable Rollbacks",
  "dashboard.rollback.allowRollingBackDescription": "Allow automatic rollback on deployment failures",
  "dashboard.rollback.saveSettings": "Save Settings",
  "dashboard.previewDeployments.previewDeploymentDeleted": "Preview deployment deleted successfully",
  "dashboard.previewDeployments.previewDeployments": "Preview Deployments",
  "dashboard.previewDeployments.seeAllPreviewDeployments": "See all preview deployments created from pull requests",
  "dashboard.previewDeployments.loadingPreviewDeployments": "Loading preview deployments...",
  "dashboard.previewDeployments.noPreviewDeploymentsFound": "No preview deployments found",
  "dashboard.previewDeployments.pullRequest": "Pull Request",
  "dashboard.previewDeployments.logs": "Logs",
  "dashboard.previewDeployments.previewDeploymentsDisabled": "Preview deployments are disabled",
  "dashboard.previewDomain.domainUpdated": "Domain updated successfully",
  "dashboard.previewDomain.domainCreated": "Domain created successfully",
  "dashboard.previewDomain.errorUpdatingDomain": "Error updating domain",
  "dashboard.previewDomain.errorCreatingDomain": "Error creating domain",
  "dashboard.previewDomain.update": "Update",
  "dashboard.previewDomain.create": "Create",
  "dashboard.previewDomain.editDomainDescription": "Edit domain configuration for this preview deployment",
  "dashboard.previewDomain.addDomainDescription": "Add a domain for this preview deployment",
  "dashboard.logs.description": "View application logs in real-time",
  "dashboard.logs.loading": "Loading logs...",
  "dashboard.logs.selectContainer": "Select Container",
  "dashboard.logs.selectContainerPlaceholder": "Select a container",
  "dashboard.command.description": "Add custom commands to run in your application container",
  "dashboard.command.commandPlaceholder": "npm run start",
  "dashboard.command.save": "Save",
  "dashboard.ports.ports": "Ports",
  "dashboard.ports.portsDescription": "Configure port mappings for your application",
  "dashboard.ports.addPort": "Add Port",
  "dashboard.ports.noPortsConfigured": "No ports configured",
  "dashboard.ports.redeployReminder": "Remember to redeploy your application after making changes",
  "dashboard.ports.publishedPort": "Published Port",
  "dashboard.ports.publishedPortMode": "Published Port Mode",
  "dashboard.ports.targetPort": "Target Port",
  "dashboard.ports.targetPortPlaceholder": "3000",
  "dashboard.ports.protocol": "Protocol",
  "dashboard.ports.deletePort": "Delete Port",
  "dashboard.ports.portDeletedSuccessfully": "Port deleted successfully",
  "dashboard.ports.errorDeletingPort": "Error deleting port",
  "dashboard.ports.portUpdated": "Port updated successfully",
  "dashboard.ports.portCreated": "Port created successfully",
  "dashboard.ports.errorUpdatingPort": "Error updating port",
  "dashboard.ports.errorCreatingPort": "Error creating port",
  "dashboard.ports.description": "Configure network ports for your application",
  "dashboard.ports.ingress": "Ingress",
  "dashboard.ports.host": "Host",
  "dashboard.ports.tcp": "TCP",
  "dashboard.ports.update": "Update",
  "dashboard.ports.create": "Create",
  "dashboard.import.enterBase64Template": "Please enter a base64 template",
  "dashboard.import.templateImportedSuccessfully": "Template imported successfully",
  "dashboard.import.errorImportingTemplate": "Error importing template",
  "dashboard.import.errorProcessingTemplate": "Error processing template",
  "dashboard.import.configurationBase64": "Configuration Base64",
  "dashboard.import.description": "Import your Template configuration",
  "dashboard.import.base64Placeholder": "Paste your base64 content here...",
  "dashboard.import.warning": "Warning: Importing a template will remove all existing environment variables, mounts, and domains from this service.",
  "dashboard.import.load": "Load",
  "dashboard.import.dockerCompose": "Docker Compose",
  "dashboard.import.traefik": "Traefik",
  "dashboard.import.redirects": "Redirects",
  "dashboard.import.volumes": "Volumes",
  "dashboard.import.environmentVariables": "Environment Variables",
  "dashboard.import.port": "Port",
  "dashboard.import.host": "Host",
  "dashboard.import.path": "Path",
  "dashboard.import.mounts": "Mounts",
  "dashboard.import.mountFileContent": "Mount File Content",
  "dashboard.import.serviceName": "Service Name",
  "dashboard.import.domains": "Domains",
  "dashboard.import.commands": "Commands",
  "dashboard.import.templateInformation": "Template Information",
  "dashboard.import.reviewTemplate": "Review the template before importing it",
  "dashboard.import.cancel": "Cancel",
  "dashboard.import.close": "Close",
  "dashboard.import.import": "Import",
  "dashboard.volumes.description": "If you want to persist data in this service use the following config to setup the volumes",
  "dashboard.volumes.create": "Create",
  "dashboard.volumes.content": "Content",
  "dashboard.volumes.filePath": "File Path",
  "dashboard.volumes.volumeName": "Volume Name",
  "dashboard.volumes.update": "Update",
  "dashboard.resources.memoryLimitPlaceholder": "1073741824 (1GB in bytes)",
  "dashboard.resources.cpuLimitPlaceholder": "2000000000 (2 CPUs)",
  "dashboard.resources.memoryReservationPlaceholder": "268435456 (256MB in bytes)",
  "dashboard.resources.cpuReservationPlaceholder": "1000000000 (1 CPU)",
  "dashboard.resources.memoryReservationTooltip": "Memory soft limit in bytes. Example: 256MB = 268435456 bytes",
  "dashboard.resources.resourcesUpdated": "Resources updated successfully",
  "dashboard.resources.errorUpdatingResources": "Error updating resources",
  "dashboard.resources.resources": "Resources",
  "dashboard.resources.description": "If you want to decrease or increase the resources to a specific. application or database",
  "dashboard.resources.redeployReminder": "Please remember to click Redeploy after modify the resources to apply the changes.",
  "dashboard.resources.memoryLimit": "Memory Limit",
  "dashboard.resources.memoryLimitTooltip": "Memory hard limit in bytes. Example: 1GB = 1073741824 bytes",
  "dashboard.resources.memoryReservation": "Memory Reservation",
  "dashboard.resources.cpuLimit": "CPU Limit",
  "dashboard.resources.cpuLimitTooltip": "CPU quota in units of 10^-9 CPUs. Example: 2 CPUs = 2000000000",
  "dashboard.resources.cpuReservation": "CPU Reservation",
  "dashboard.resources.cpuReservationTooltip": "CPU shares (relative weight). Example: 1 CPU = 1000000000",
  "dashboard.resources.save": "Save",
  "dashboard.traefik.traefik": "Traefik",
  "dashboard.traefik.description": "Modify the traefik config, in rare cases you may need to add specific config, be careful because modifying incorrectly can break traefik and your application",
  "dashboard.traefik.loading": "Loading Traefik configuration...",
  "dashboard.traefik.noTraefikConfigDetected": "No Traefik configuration detected",
  "dashboard.traefik.empty": "No configuration available",
  "dashboard.traefik.traefikConfigUpdated": "Traefik configuration updated successfully",
  "dashboard.traefik.errorUpdatingTraefikConfig": "Error updating Traefik configuration",
  "dashboard.traefik.modify": "Modify",
  "dashboard.traefik.updateTraefikConfig": "Update Traefik Config",
  "dashboard.traefik.updateTraefikConfigDescription": "Modify the Traefik configuration for this application",
  "dashboard.traefik.traefikConfig": "Traefik Config",
  "dashboard.redirects.description": "If you want to redirect requests to this application use the following config to setup the redirects",
  "dashboard.redirects.update": "Update",
  "dashboard.redirects.create": "Create",
  "dashboard.deployments.viewLogs": "View Logs",
  "dashboard.deployments.areYouAbsolutelySure": "Are you absolutely sure?",
  "dashboard.deployments.refreshTokenDescription": "This will refresh the deployment token for this application",
  "dashboard.deployments.cancel": "Cancel",
  "dashboard.deployments.refreshUpdated": "Refresh token updated successfully",
  "dashboard.deployments.errorUpdatingRefreshToken": "Error updating refresh token",
  "dashboard.deployments.confirm": "Confirm",
  "dashboard.deployments.deployments": "Deployments",
  "dashboard.deployments.seeLastDeployments": "See the last deployments of this {{type}}",
  "dashboard.deployments.configureRollbacks": "Configure Rollbacks",
  "dashboard.deployments.redeployInstructions": "To redeploy this application, you can use the following webhook URL:",
  "dashboard.deployments.webhookUrl": "Webhook URL",
  "dashboard.deployments.loadingDeployments": "Loading deployments...",
  "dashboard.deployments.noDeploymentsFound": "No deployments found",
  "dashboard.deployments.killProcess": "Kill Process",
  "dashboard.deployments.errorKillingProcess": "Error killing process",
  "dashboard.deployments.view": "View",
  "dashboard.deployments.rollback": "Rollback",
  "dashboard.deployments.cancelQueues": "Cancel Queues",
  "dashboard.deployments.cancelQueuesConfirmation": "Cancel Queues",
  "dashboard.deployments.cancelQueuesDescription": "This will cancel all pending deployment queues",
  "dashboard.deployments.queuesBeingCleaned": "Queues are being cleaned",
  "dashboard.deployments.deployment": "Deployment",
  "dashboard.deployments.seeDeploymentDetails": "See all the details of this deployment",
  "dashboard.deployments.showExtraLogs": "Show Extra Logs",
  "dashboard.previewSettings.required": "This field is required",
  "dashboard.previewSettings.previewDeploymentsSettingsUpdated": "Preview deployment settings updated successfully",
  "dashboard.previewSettings.configure": "Configure",
  "dashboard.previewSettings.previewDeploymentSettings": "Preview Deployment Settings",
  "dashboard.previewSettings.wildcardDomain": "Wildcard Domain",
  "dashboard.previewSettings.previewPath": "Preview Path",
  "dashboard.previewSettings.port": "Port",
  "dashboard.previewSettings.previewLimit": "Preview Limit",
  "dashboard.previewSettings.https": "HTTPS",
  "dashboard.previewSettings.certificateProvider": "Certificate Provider",
  "dashboard.previewSettings.none": "None",
  "dashboard.previewSettings.letsEncrypt": "Let's Encrypt",
  "dashboard.previewSettings.custom": "Custom",
  "dashboard.previewSettings.buildTimeVariables": "Build Time Variables",
  "dashboard.previewSettings.here": "here",
  "dashboard.previewSettings.cancel": "Cancel",
  "dashboard.previewSettings.save": "Save",
  "dashboard.previewSettings.adjustSettingsForPreviewDeployments": "Adjust settings for preview deployments",
  "dashboard.previewSettings.automaticallyProvisionSslCertificate": "Automatically provision SSL certificate",
  "dashboard.previewSettings.selectCertificateProvider": "Select certificate provider",
  "dashboard.previewSettings.enablePreviewDeployments": "Enable Preview Deployments",
  "dashboard.previewSettings.enableOrDisablePreviewDeployments": "Enable or disable preview deployments for this application",
  "dashboard.previewSettings.previewDeploymentsEnabled": "Preview deployments enabled",
  "dashboard.previewSettings.previewDeploymentsDisabled": "Preview deployments disabled",
  "dashboard.previewSettings.environmentSettings": "Environment Settings",
  "dashboard.previewSettings.addEnvironmentVariables": "Add environment variables for preview deployments",
  "dashboard.previewSettings.availableOnlyAtBuildTime": "Available only at build time",
  "dashboard.domain.name": "Name",
  "dashboard.ports.udp": "UDP",
  "dashboard.security.security": "Security",
  "dashboard.security.description": "Add basic auth to your application",
  "dashboard.security.securityToApplication": "security to Application",
  "dashboard.security.deleteSecurity": "Delete Security",
  "dashboard.security.deleteSecurityConfirmation": "Are you sure you want to delete this security?",
  "dashboard.security.errorDeletingSecurity": "Error deleting security",
  "dashboard.security.noSecurityConfigured": "No security configured",
  "dashboard.security.addSecurity": "Add Security",
  "dashboard.security.username": "Username",
  "dashboard.security.password": "Password",
  "dashboard.security.securityUpdated": "Security updated successfully",
  "dashboard.security.securityCreated": "Security created successfully",
  "dashboard.security.errorUpdatingSecurity": "Error updating security",
  "dashboard.security.errorCreatingSecurity": "Error creating security",
  "dashboard.security.update": "Update",
  "dashboard.security.add": "Add",
  "dashboard.security.create": "Create",
  "dashboard.volumeBackup.volumeBackups": "Volume Backups",
  "dashboard.volumeBackup.scheduleVolumeBackupsDescription": "Schedule automatic backups of your application volumes",
  "dashboard.volumeBackup.loadingVolumeBackups": "Loading volume backups...",
  "dashboard.volumeBackup.enabled": "Enabled",
  "dashboard.volumeBackup.disabled": "Disabled",
  "dashboard.volumeBackup.cron": "Cron",
  "dashboard.volumeBackup.runManualVolumeBackup": "Run Manual Volume Backup",
  "dashboard.volumeBackup.deleteVolumeBackup": "Delete Volume Backup",
  "dashboard.volumeBackup.noVolumeBackups": "No volume backups found",
  "dashboard.domain.dnsConfigurationInfo": "DNS Configuration Information",
  "dashboard.domain.addARecord": "Add A Record",
  "dashboard.domain.createARecordDescription": "Create an A record pointing to your server's IP address",
  "dashboard.domain.type": "Type",
  "dashboard.domain.value": "Value",
  "dashboard.domain.yourServerIp": "Your Server IP",
  "dashboard.domain.copiedToClipboard": "Copied to clipboard!",
  "dashboard.domain.dnsConfigurationGuide": "DNS Configuration Guide",
  "dashboard.domain.verifyConfiguration": "Verify Configuration",
  "dashboard.domain.afterConfiguringDns": "After configuring DNS",
  "dashboard.domain.waitForDnsPropagation": "Wait for DNS propagation (can take up to 24 hours)",
  "dashboard.domain.testYourDomain": "Test your domain",
  "dashboard.domain.useDnsLookupTool": "Use a DNS lookup tool to verify the A record",
  "dashboard.application.nameRequired": "Name is required",
  "dashboard.application.updatedSuccessfully": "Application updated successfully",
  "dashboard.application.errorUpdating": "Error updating application",
  "dashboard.application.modifyApplication": "Modify Application",
  "dashboard.application.updateApplicationData": "Update application data",
  "dashboard.volumeBackup.nameRequired": "Name is required",
  "dashboard.volumeBackup.cronExpressionRequired": "Cron expression is required",
  "dashboard.volumeBackup.volumeNameRequired": "Volume name is required",
  "dashboard.volumeBackup.destinationRequired": "Destination is required",
  "dashboard.volumeBackup.serviceNameRequired": "Service name is required",
  "dashboard.volumeBackup.unknownError": "Unknown error occurred",
  "dashboard.volumeBackup.addVolumeBackup": "Add Volume Backup",
  "dashboard.volumeBackup.editVolumeBackup": "Edit Volume Backup",
  "dashboard.volumeBackup.createVolumeBackup": "Create Volume Backup",
  "dashboard.volumeBackup.createVolumeBackupDescription": "Create a new volume backup schedule",
  "dashboard.volumeBackup.taskName": "Task Name",
  "dashboard.volumeBackup.descriptiveName": "Descriptive name for this backup task",
  "dashboard.volumeBackup.schedule": "Schedule",
  "dashboard.volumeBackup.cronExpressionFormat": "Cron expression format",
  "dashboard.volumeBackup.cronExpressionExample": "Example: 0 2 * * * (daily at 2 AM)",
  "dashboard.volumeBackup.destination": "Destination",
  "dashboard.volumeBackup.chooseBackupDestination": "Choose backup destination",
  "dashboard.volumeBackup.serviceName": "Service Name",
  "dashboard.volumeBackup.fetchDescription": "Fetch backup data",
  "dashboard.volumeBackup.cacheDescription": "Cache backup data",
  "dashboard.volumeBackup.volumes": "Volumes",
  "dashboard.volumeBackup.chooseVolumeToBackup": "Choose volume to backup",
  "dashboard.volumeBackup.volumeName": "Volume Name",
  "dashboard.volumeBackup.dockerVolumeName": "Docker volume name",
  "dashboard.volumeBackup.backupPrefix": "Backup Prefix",
  "dashboard.volumeBackup.backupPrefixDescription": "Prefix for backup file names",
  "dashboard.volumeBackup.keepLatestCount": "Keep Latest Count",
  "dashboard.volumeBackup.keepLatestCountDescription": "Number of latest backups to keep",
  "dashboard.volumeBackup.turnOffContainerDuringBackup": "Turn off container during backup",
  "dashboard.volumeBackup.updateVolumeBackup": "Update Volume Backup",
  "dashboard.volumeBackup.updatedSuccess": "Volume backup updated successfully",
  "dashboard.volumeBackup.createdSuccess": "Volume backup created successfully",
  "dashboard.volumeBackup.dailyDatabaseBackupPlaceholder": "Daily Database Backup",
  "dashboard.volumeBackup.selectPredefinedSchedule": "Select predefined schedule",
  "dashboard.volumeBackup.customCronExpressionPlaceholder": "0 2 * * *",
  "dashboard.volumeBackup.choosePredefinedScheduleOrCustom": "Choose a predefined schedule or enter a custom cron expression",
  "dashboard.volumeBackup.selectDestination": "Select destination",
  "dashboard.volumeBackup.selectServiceName": "Select service name",
  "dashboard.volumeBackup.empty": "Empty",
  "dashboard.volumeBackup.selectVolumeName": "Select volume name",
  "dashboard.volumeBackup.myVolumeNamePlaceholder": "my-volume-name",
  "dashboard.volumeBackup.backupPrefixPlaceholder": "/backups/myapp",
  "dashboard.volumeBackup.keepLatestCountPlaceholder": "10",
  "dashboard.volumeBackup.turnOffContainerDuringBackupDescription": "This will stop the container during backup to ensure data consistency",
  "dashboard.application.build.buildTypeSaved": "Build type saved successfully",
  "dashboard.command.commandUpdated": "Command updated successfully",
  "dashboard.command.errorUpdatingCommand": "Error updating command",
  "dashboard.command.runCommand": "Run Command",
  "dashboard.command.command": "Command",
  "dashboard.security.securityDeletedSuccessfully": "Security deleted successfully",
  "dashboard.backups.backups": "Backups",
  "dashboard.backups.backupsDescription": "Configure automatic database backups",
  "dashboard.backups.providerRequired": "To create a backup it is required to set at least 1 provider. Please, go to",
  "dashboard.backups.s3Destinations": "S3 Destinations",
  "dashboard.backups.toDoSo": "to do so.",
  "dashboard.backups.noBackupsConfigured": "No backups configured",
  "dashboard.backups.composeBackups": "Compose Backups",
  "dashboard.backups.composeBackupsWarning": "Compose backups require manual database configuration. Make sure your database credentials are correct.",
  "dashboard.backups.active": "Active",
  "dashboard.backups.inactive": "Inactive",
  "dashboard.backups.destination": "Destination",
  "dashboard.backups.database": "Database",
  "dashboard.backups.schedule": "Schedule",
  "dashboard.backups.prefixStorage": "Prefix Storage",
  "dashboard.backups.keepLatest": "Keep Latest",
  "dashboard.backups.all": "All",
  "dashboard.backups.manualBackupSuccessful": "Manual backup created successfully",
  "dashboard.backups.errorCreatingManualBackup": "Error creating manual backup",
  "dashboard.backups.runManualBackup": "Run Manual Backup",
  "dashboard.backups.deleteBackup": "Delete Backup",
  "dashboard.backups.deleteBackupConfirmation": "This action cannot be undone. This will permanently delete the backup configuration.",
  "dashboard.backups.backupDeletedSuccessfully": "Backup deleted successfully",
  "dashboard.backups.errorDeletingBackup": "Error deleting backup",
  "dashboard.backups.destinationRequired": "Destination is required",
  "dashboard.backups.scheduleRequired": "Schedule is required",
  "dashboard.backups.prefixRequired": "Prefix is required",
  "dashboard.backups.databaseRequired": "Database is required",
  "dashboard.backups.databaseTypeRequired": "Database type is required",
  "dashboard.backups.serviceNameRequired": "Service name is required",
  "dashboard.backups.databaseUserRequiredPostgres": "Database user is required for PostgreSQL",
  "dashboard.backups.databaseUserRequiredMariaDB": "Database user is required for MariaDB",
  "dashboard.backups.databasePasswordRequiredMariaDB": "Database password is required for MariaDB",
  "dashboard.backups.databaseUserRequiredMongoDB": "Database user is required for MongoDB",
  "dashboard.backups.databasePasswordRequiredMongoDB": "Database password is required for MongoDB",
  "dashboard.backups.rootPasswordRequiredMySQL": "Root password is required for MySQL",
  "dashboard.backups.backupUpdatedCreated": "Backup {{action}} successfully",
  "dashboard.backups.updated": "updated",
  "dashboard.backups.created": "created",
  "dashboard.backups.errorUpdatingCreatingBackup": "Error {{action}} backup",
  "dashboard.backups.updating": "updating",
  "dashboard.backups.creating": "creating",
  "dashboard.backups.updateBackup": "Update Backup",
  "dashboard.backups.createBackup": "Create Backup",
  "dashboard.backups.updateBackupDescription": "Update backup configuration",
  "dashboard.backups.addBackupDescription": "Add a new backup configuration",
  "dashboard.backups.databaseType": "Database Type",
  "dashboard.backups.selectDatabaseType": "Select database type",
  "dashboard.backups.loading": "Loading...",
  "dashboard.backups.selectDestination": "Select destination",
  "dashboard.backups.searchDestination": "Search destinations...",
  "dashboard.backups.loadingDestinations": "Loading destinations...",
  "dashboard.backups.noDestinationsFound": "No destinations found",
  "dashboard.backups.serviceName": "Service Name",
  "dashboard.backups.selectServiceName": "Select service name",
  "dashboard.backups.empty": "Empty",
  "dashboard.backups.fetchTooltip": "Fetch services from compose file",
  "dashboard.backups.cacheTooltip": "Use cached service list",
  "dashboard.backups.databasePlaceholder": "database_name",
  "dashboard.backups.cronFormat": "Cron format: min hour day month weekday",
  "dashboard.backups.cronExample": "Example: 0 2 * * * (daily at 2 AM)",
  "dashboard.backups.selectPredefinedSchedule": "Select predefined schedule",
  "dashboard.backups.customCronPlaceholder": "0 2 * * *",
  "dashboard.backups.scheduleDescription": "When to run the backup (cron expression)",
  "dashboard.backups.prefixDestination": "Prefix Destination",
  "dashboard.backups.prefixPlaceholder": "/backups",
  "dashboard.backups.prefixDescription": "Prefix path for backup files",
  "dashboard.backups.keepLatestPlaceholder": "10",
  "dashboard.backups.keepLatestDescription": "Number of backups to keep (leave empty for all)",
  "dashboard.backups.enabled": "Enabled",
  "dashboard.backups.enabledDescription": "Enable or disable this backup",
  "dashboard.backups.databaseUser": "Database User",
  "dashboard.backups.databasePassword": "Database Password",
  "dashboard.backups.rootPassword": "Root Password",
  "dashboard.backups.update": "Update",
  "dashboard.backups.create": "Create",
  "dashboard.backups.restoreBackup": "Restore Backup",
  "dashboard.backups.restoreBackupDescription": "Select a destination and search for backup files",
  "dashboard.backups.searchDestinations": "Search destinations...",
  "dashboard.backups.searchBackupFiles": "Search Backup Files",
  "dashboard.backups.searchAndSelectBackupFile": "Search and select a backup file",
  "dashboard.backups.loadingBackupFiles": "Loading backup files...",
  "dashboard.backups.noBackupFilesFoundFor": "No backup files found for {{search}}",
  "dashboard.backups.noBackupFilesAvailable": "No backup files available",
  "dashboard.backups.size": "Size: {{size}}",
  "dashboard.backups.directory": "Directory",
  "dashboard.backups.md5": "MD5: {{md5}}",
  "dashboard.backups.databaseName": "Database Name",
  "dashboard.backups.enterDatabaseName": "Enter database name",
  "dashboard.backups.enterDatabaseUser": "Enter database user",
  "dashboard.backups.enterDatabasePassword": "Enter database password",
  "dashboard.backups.enterRootPassword": "Enter root password",
  "dashboard.backups.restore": "Restore",
  "dashboard.backups.fetchDescription": "Fetch services from compose file",
  "dashboard.backups.cacheDescription": "Use cached service list",
  "dashboard.backups.postgres": "PostgreSQL",
  "dashboard.backups.mariadb": "MariaDB",
  "dashboard.backups.mongodb": "MongoDB",
  "dashboard.backups.mysql": "MySQL",
  "dashboard.backups.destinationRequiredMessage": "Destination is required",
  "dashboard.backups.backupFileRequired": "Backup file is required",
  "dashboard.backups.backupFileRequiredMessage": "Backup file is required",
  "dashboard.backups.databaseNameRequired": "Database name is required",
  "dashboard.backups.databaseNameRequiredMessage": "Database name is required",
  "dashboard.redirects.redirects": "Redirects",
  "dashboard.redirects.addRedirect": "Add Redirect",
  "dashboard.redirects.noRedirectsConfigured": "No redirects configured",
  "dashboard.redirects.regex": "Regex",
  "dashboard.redirects.replacement": "Replacement",
  "dashboard.redirects.permanent": "Permanent",
  "dashboard.redirects.yes": "Yes",
  "dashboard.redirects.no": "No",
  "dashboard.redirects.deleteRedirect": "Delete Redirect",
  "dashboard.redirects.deleteRedirectConfirmation": "Are you sure you want to delete this redirect?",
  "dashboard.redirects.redirectDeletedSuccessfully": "Redirect deleted successfully",
  "dashboard.redirects.errorDeletingRedirect": "Error deleting redirect",
  "dashboard.redirects.redirectUpdated": "Redirect updated successfully",
  "dashboard.redirects.redirectCreated": "Redirect created successfully",
  "dashboard.redirects.errorUpdatingRedirect": "Error updating redirect",
  "dashboard.redirects.errorCreatingRedirect": "Error creating redirect",
  "dashboard.redirects.redirectsDescription": "Configure URL redirects for your application",
  "dashboard.redirects.presets": "Presets",
  "dashboard.redirects.presets.to-www": "Redirect to www",
  "dashboard.redirects.presets.to-non-www": "Redirect to non-www",
  "dashboard.redirects.regexPlaceholder": "^https?://(.+)",
  "dashboard.redirects.replacementPlaceholder": "https://example.com/$1",
  "dashboard.redirects.permanentDescription": "Use permanent redirect (301) instead of temporary (302)",
  "dashboard.redirects.noPresetSelected": "No preset selected",
  "dashboard.volumes.mountCreated": "Mount created successfully",
  "dashboard.volumes.errorCreatingBindMount": "Error creating bind mount",
  "dashboard.volumes.errorCreatingVolumeMount": "Error creating volume mount",
  "dashboard.volumes.errorCreatingFileMount": "Error creating file mount",
  "dashboard.volumes.volumesMounts": "Volumes & Mounts",
  "dashboard.volumes.bindMountWarning": "Make sure the host path is a valid path and exists in the host machine.",
  "dashboard.volumes.clusterWarning": "strong>Cluster Warning:</strong> If you're using cluster features, bind mounts may cause deployment failures since the path must exist on all worker/manager nodes. Consider using external tools to distribute the folder across nodes or use named volumes instead.",
  "dashboard.volumes.selectMountType": "Select Mount Type",
  "dashboard.volumes.bindMount": "Bind Mount",
  "dashboard.volumes.volumeMount": "Volume Mount",
  "dashboard.volumes.fileMount": "File Mount",
  "dashboard.volumes.fillFields": "Fill next fields",
  "dashboard.volumes.hostPath": "Host Path",
  "dashboard.volumes.hostPathPlaceholder": "/host/path",
  "dashboard.volumes.volumeNamePlaceholder": "my-volume",
  "dashboard.volumes.contentPlaceholder": "File content here...",
  "dashboard.volumes.filePathPlaceholder": "/app/config.yaml",
  "dashboard.volumes.mountPathPlaceholder": "/app/data",
  "dashboard.volumes.volumes": "Volumes",
  "dashboard.volumes.mountPath": "Mount Path (In the container)",
  "dashboard.volumes.addVolume": "Add Volume",
  "dashboard.volumes.noVolumesConfigured": "No volumes/mounts configured",
  "dashboard.volumes.redeployReminder": "Please remember to click Redeploy after adding, editing, or deleting a mount to apply the changes.",
  "dashboard.volumes.mountType": "Mount Type",
  "dashboard.volumes.deleteVolume": "Delete Volume",
  "dashboard.volumes.deleteVolumeConfirmation": "Are you sure you want to delete this volume?",
  "dashboard.volumes.volumeDeletedSuccessfully": "Volume deleted successfully",
  "dashboard.volumes.errorDeletingVolume": "Error deleting volume",
  "dashboard.volumes.mountUpdated": "Mount updated successfully",
  "dashboard.volumes.errorUpdatingBindMount": "Error updating bind mount",
  "dashboard.volumes.errorUpdatingVolumeMount": "Error updating volume mount",
  "dashboard.volumes.errorUpdatingFileMount": "Error updating file mount",
  "dashboard.volumes.updateMount": "Update mount configuration",
  "dashboard.volumes.fileUpdateWarning": "Updating the mount will recreate the file or directory.",
  "dashboard.backups.cronLabel.everyMinute": "Every minute",
  "dashboard.backups.cronLabel.every5Minutes": "Every 5 minutes",
  "dashboard.backups.cronLabel.every15Minutes": "Every 15 minutes",
  "dashboard.backups.cronLabel.every30Minutes": "Every 30 minutes",
  "dashboard.backups.cronLabel.hourly": "Every hour",
  "dashboard.backups.cronLabel.every2Hours": "Every 2 hours",
  "dashboard.backups.cronLabel.every6Hours": "Every 6 hours",
  "dashboard.backups.cronLabel.every12Hours": "Every 12 hours",
  "dashboard.backups.cronLabel.daily": "Daily at midnight",
  "dashboard.backups.cronLabel.dailyAt2AM": "Daily at 2 AM",
  "dashboard.backups.cronLabel.weekly": "Weekly (Sundays at midnight)",
  "dashboard.backups.cronLabel.monthly": "Monthly (1st day at midnight)"
}
