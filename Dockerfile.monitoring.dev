# Development Dockerfile for Monitoring Service
FROM golang:alpine AS dev

# Install development tools
RUN apk add --no-cache \
    gcc \
    musl-dev \
    sqlite-dev \
    git \
    make \
    curl \
    docker-cli \
    && go install github.com/air-verse/air@latest

WORKDIR /app

# Copy go mod files
COPY apps/monitoring/go.mod apps/monitoring/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY apps/monitoring/ .

# Create air config for hot reloading
RUN echo 'root = "."' > .air.toml && \
    echo 'testdata_dir = "testdata"' >> .air.toml && \
    echo 'tmp_dir = "tmp"' >> .air.toml && \
    echo '' >> .air.toml && \
    echo '[build]' >> .air.toml && \
    echo '  args_bin = []' >> .air.toml && \
    echo '  bin = "./tmp/main"' >> .air.toml && \
    echo '  cmd = "go build -o ./tmp/main ."' >> .air.toml && \
    echo '  delay = 1000' >> .air.toml && \
    echo '  exclude_dir = ["assets", "tmp", "vendor", "testdata"]' >> .air.toml && \
    echo '  exclude_file = []' >> .air.toml && \
    echo '  exclude_regex = ["_test.go"]' >> .air.toml && \
    echo '  exclude_unchanged = false' >> .air.toml && \
    echo '  follow_symlink = false' >> .air.toml && \
    echo '  full_bin = ""' >> .air.toml && \
    echo '  include_dir = []' >> .air.toml && \
    echo '  include_ext = ["go", "tpl", "tmpl", "html"]' >> .air.toml && \
    echo '  include_file = []' >> .air.toml && \
    echo '  kill_delay = "0s"' >> .air.toml && \
    echo '  log = "build-errors.log"' >> .air.toml && \
    echo '  poll = false' >> .air.toml && \
    echo '  poll_interval = 0' >> .air.toml && \
    echo '  rerun = false' >> .air.toml && \
    echo '  rerun_delay = 500' >> .air.toml && \
    echo '  send_interrupt = false' >> .air.toml && \
    echo '  stop_on_root = false' >> .air.toml

# Expose port
EXPOSE 3003

# Set development environment
ENV CGO_ENABLED=1
ENV GOOS=linux

# Development command with hot reloading
CMD ["sh", "-c", "echo 'root = \".\"' > .air.toml && echo 'testdata_dir = \"testdata\"' >> .air.toml && echo 'tmp_dir = \"tmp\"' >> .air.toml && echo '' >> .air.toml && echo '[build]' >> .air.toml && echo '  args_bin = []' >> .air.toml && echo '  bin = \"./tmp/main\"' >> .air.toml && echo '  cmd = \"go build -o ./tmp/main .\"' >> .air.toml && echo '  delay = 1000' >> .air.toml && echo '  exclude_dir = [\"assets\", \"tmp\", \"vendor\", \"testdata\"]' >> .air.toml && echo '  exclude_file = []' >> .air.toml && echo '  exclude_regex = [\"_test.go\"]' >> .air.toml && echo '  exclude_unchanged = false' >> .air.toml && echo '  follow_symlink = false' >> .air.toml && echo '  full_bin = \"\"' >> .air.toml && echo '  include_dir = []' >> .air.toml && echo '  include_ext = [\"go\", \"tpl\", \"tmpl\", \"html\"]' >> .air.toml && echo '  include_file = []' >> .air.toml && echo '  kill_delay = \"0s\"' >> .air.toml && echo '  log = \"build-errors.log\"' >> .air.toml && echo '  poll = false' >> .air.toml && echo '  poll_interval = 0' >> .air.toml && echo '  rerun = false' >> .air.toml && echo '  rerun_delay = 500' >> .air.toml && echo '  send_interrupt = false' >> .air.toml && echo '  stop_on_root = false' >> .air.toml && air -c .air.toml"]
