services:
  umami:
    image: ghcr.io/umami-software/umami:postgresql-v2.12.1
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${UMAMI_PORT}
    networks:
      - dokploy-network
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: ${APP_SECRET}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${HASH}.rule=Host(`${UMAMI_HOST}`)"
      - "traefik.http.services.${HASH}.loadbalancer.server.port=${UMAMI_PORT}"
  db:
    image: postgres:15-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dokploy-network
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami

networks:
  dokploy-network:
    external: true
volumes:
  db-data:
